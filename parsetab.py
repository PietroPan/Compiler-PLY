
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "num id int print println prints string vars main repeat read sup inf eq supeq infeq not diff and or if else for while plus addeq subeq diveq muleq addeql subeql diveql muleql minus plusl minusl modeq modeql return globalProg :  MainBlc DefBlcsDefBlcs : DefBlcs DefBlc DefBlcs : DefBlc : id '{' VarBlc Insts '}' VarBlc :  Dcls Dcls : Dcls DclDcls : MainBlc : main '{' VarBlc Insts '}'Insts : Insts Inst Insts :Inst : AttrInst : ReturnInst : ExpInst : PrintInst : PrintlnInst : PrintsInst : RepeatInst : ForInst : WhileInst : ReadInst : IfRepeat : RepeatS '(' num ')' '{' Insts '}' RepeatS : repeatFor : for '(' Insts ';' Cond ';' Insts ')' '{' Insts '}'While : while '(' Cond ')' '{' Insts '}'Read : read '(' id ')'Print : print '(' Exp ')'Println : println '(' Exp ')'Prints : prints '(' string ')'Dcl : int id '[' num ']'Dcl : int id '[' num ']' '[' num ']'Dcl : int idDcl : int id '=' numAttr : id '=' ExpAttr : id '[' Exp ']' '=' ExpAttr : id '[' Exp ']' '[' Exp ']' '=' ExpReturn : return '(' Exp ')'If : if '(' Cond ')' '{' Insts '}' If : if '(' Cond ')' Inst IfStart : if '(' Cond ')'If : if '(' Cond ')' '{' Insts '}' else '{' Insts '}'ElseStart : else Exp : Exp '+' TermExp : Exp '-' TermExp : id addeq TermExp : id subeq TermExp : id addeql TermExp : id subeql TermExp : TermTerm : Term '*' FactorTerm : Term '/' FactorTerm : Term '%' FactorTerm : id muleq FactorTerm : id diveq FactorTerm : id modeq FactorTerm : id muleql FactorTerm : id diveql FactorTerm : id modeql FactorTerm : FactorFactor : id plusFactor : id pluslFactor : id minusFactor : id minuslFactor : idFactor : numFactor : id '(' ')' Factor : '(' Cond ')'Factor : id '[' Exp ']'Factor : id '[' Exp ']' '[' Exp ']'Factor : '(' Exp ')'Id : idId : id '[' Exp ']'Id : id '[' Exp ']' '[' Exp ']'Cond : Cond and CondCond : Cond or CondCond : '(' Cond and Cond ')'Cond : '(' Cond or Cond ')' Cond : Exp sup ExpCond : Exp inf ExpCond : Exp supeq ExpCond : Exp infeq ExpCond : not ExpCond : Exp eq ExpCond : Exp diff Exp"
    
_lr_action_items = {'main':([0,],[3,]),'$end':([1,2,4,6,15,83,],[0,-3,-1,-2,-8,-4,]),'id':([2,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,36,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,68,69,70,71,72,73,74,77,78,79,80,83,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,114,115,116,117,122,128,129,130,131,132,142,143,144,146,148,149,150,151,152,155,156,158,159,160,163,166,167,168,169,170,172,174,175,176,177,178,179,180,183,184,185,186,187,188,189,],[-3,7,-7,-2,-10,-5,-7,28,-6,43,-10,-8,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,69,-49,-65,-59,-32,28,85,85,69,69,85,85,85,85,93,93,93,93,93,93,-60,-61,-62,-63,69,69,69,-64,93,93,93,69,69,-10,69,125,69,-4,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,69,69,-70,69,69,69,69,69,69,69,-50,-51,-52,28,-33,-68,-37,69,69,-27,-28,-29,69,-26,28,-30,69,69,-68,-10,-10,-10,-39,-35,69,28,-10,28,28,-69,-22,28,-25,-38,-31,69,-69,-36,-10,-10,28,28,-24,-41,]),'{':([3,7,145,147,149,181,182,],[5,10,156,158,159,184,185,]),'int':([5,9,10,12,43,128,150,178,],[-7,13,-7,-6,-32,-33,-30,-31,]),'}':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,43,44,59,60,61,62,69,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,128,129,130,142,143,144,148,150,155,156,158,159,160,163,167,169,170,172,174,176,177,178,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,15,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-32,83,-60,-61,-62,-63,-64,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,-33,-68,-37,-27,-28,-29,-26,-30,-68,-10,-10,-10,-39,-35,174,176,177,-69,-22,-25,-38,-31,-69,-36,-10,-10,188,189,-24,-41,]),'return':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,43,44,59,60,61,62,69,77,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,122,128,129,130,142,143,144,148,149,150,155,156,158,159,160,163,167,168,169,170,172,174,175,176,177,178,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,29,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-32,29,-60,-61,-62,-63,-64,-10,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,29,-33,-68,-37,-27,-28,-29,-26,29,-30,-68,-10,-10,-10,-39,-35,29,-10,29,29,-69,-22,29,-25,-38,-31,-69,-36,-10,-10,29,29,-24,-41,]),'print':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,43,44,59,60,61,62,69,77,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,122,128,129,130,142,143,144,148,149,150,155,156,158,159,160,163,167,168,169,170,172,174,175,176,177,178,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,32,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-32,32,-60,-61,-62,-63,-64,-10,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,32,-33,-68,-37,-27,-28,-29,-26,32,-30,-68,-10,-10,-10,-39,-35,32,-10,32,32,-69,-22,32,-25,-38,-31,-69,-36,-10,-10,32,32,-24,-41,]),'println':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,43,44,59,60,61,62,69,77,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,122,128,129,130,142,143,144,148,149,150,155,156,158,159,160,163,167,168,169,170,172,174,175,176,177,178,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,33,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-32,33,-60,-61,-62,-63,-64,-10,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,33,-33,-68,-37,-27,-28,-29,-26,33,-30,-68,-10,-10,-10,-39,-35,33,-10,33,33,-69,-22,33,-25,-38,-31,-69,-36,-10,-10,33,33,-24,-41,]),'prints':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,43,44,59,60,61,62,69,77,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,122,128,129,130,142,143,144,148,149,150,155,156,158,159,160,163,167,168,169,170,172,174,175,176,177,178,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,34,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-32,34,-60,-61,-62,-63,-64,-10,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,34,-33,-68,-37,-27,-28,-29,-26,34,-30,-68,-10,-10,-10,-39,-35,34,-10,34,34,-69,-22,34,-25,-38,-31,-69,-36,-10,-10,34,34,-24,-41,]),'for':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,43,44,59,60,61,62,69,77,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,122,128,129,130,142,143,144,148,149,150,155,156,158,159,160,163,167,168,169,170,172,174,175,176,177,178,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,37,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-32,37,-60,-61,-62,-63,-64,-10,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,37,-33,-68,-37,-27,-28,-29,-26,37,-30,-68,-10,-10,-10,-39,-35,37,-10,37,37,-69,-22,37,-25,-38,-31,-69,-36,-10,-10,37,37,-24,-41,]),'while':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,43,44,59,60,61,62,69,77,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,122,128,129,130,142,143,144,148,149,150,155,156,158,159,160,163,167,168,169,170,172,174,175,176,177,178,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,38,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-32,38,-60,-61,-62,-63,-64,-10,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,38,-33,-68,-37,-27,-28,-29,-26,38,-30,-68,-10,-10,-10,-39,-35,38,-10,38,38,-69,-22,38,-25,-38,-31,-69,-36,-10,-10,38,38,-24,-41,]),'read':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,43,44,59,60,61,62,69,77,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,122,128,129,130,142,143,144,148,149,150,155,156,158,159,160,163,167,168,169,170,172,174,175,176,177,178,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,39,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-32,39,-60,-61,-62,-63,-64,-10,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,39,-33,-68,-37,-27,-28,-29,-26,39,-30,-68,-10,-10,-10,-39,-35,39,-10,39,39,-69,-22,39,-25,-38,-31,-69,-36,-10,-10,39,39,-24,-41,]),'if':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,43,44,59,60,61,62,69,77,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,122,128,129,130,142,143,144,148,149,150,155,156,158,159,160,163,167,168,169,170,172,174,175,176,177,178,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,40,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-32,40,-60,-61,-62,-63,-64,-10,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,40,-33,-68,-37,-27,-28,-29,-26,40,-30,-68,-10,-10,-10,-39,-35,40,-10,40,40,-69,-22,40,-25,-38,-31,-69,-36,-10,-10,40,40,-24,-41,]),'repeat':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,43,44,59,60,61,62,69,77,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,122,128,129,130,142,143,144,148,149,150,155,156,158,159,160,163,167,168,169,170,172,174,175,176,177,178,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,42,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-32,42,-60,-61,-62,-63,-64,-10,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,42,-33,-68,-37,-27,-28,-29,-26,42,-30,-68,-10,-10,-10,-39,-35,42,-10,42,42,-69,-22,42,-25,-38,-31,-69,-36,-10,-10,42,42,-24,-41,]),'num':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,36,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,68,69,70,71,72,73,74,76,77,78,80,81,82,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,114,115,116,117,122,128,129,130,131,132,142,143,144,146,148,149,150,151,152,155,156,158,159,160,161,163,166,167,168,169,170,172,174,175,176,177,178,179,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,36,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,36,-49,-65,-59,-32,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-60,-61,-62,-63,36,36,36,-64,36,36,36,36,36,121,-10,36,36,127,128,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,36,36,-70,36,36,36,36,36,36,36,-50,-51,-52,36,-33,-68,-37,36,36,-27,-28,-29,36,-26,36,-30,36,36,-68,-10,-10,-10,-39,171,-35,36,36,-10,36,36,-69,-22,36,-25,-38,-31,36,-69,-36,-10,-10,36,36,-24,-41,]),'(':([5,8,9,10,11,12,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,68,69,70,71,72,73,74,77,78,80,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,104,105,106,107,108,109,110,111,112,114,115,116,117,122,128,129,130,131,132,142,143,144,146,148,149,150,151,152,155,156,158,159,160,163,166,167,168,169,170,172,174,175,176,177,178,179,180,183,184,185,186,187,188,189,],[-7,-10,-5,-7,30,-6,-10,-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,63,64,65,-49,73,74,75,76,-65,77,78,79,80,-59,-23,-32,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-60,-61,-62,-63,30,65,30,63,30,30,30,30,30,-10,65,65,-43,63,-44,-34,-45,-46,-47,-48,63,-53,-54,-55,-56,-57,-58,-66,-67,65,65,-70,30,30,30,30,30,30,30,-50,-51,-52,30,-33,-68,-37,65,65,-27,-28,-29,65,-26,30,-30,30,30,-68,-10,-10,-10,-39,-35,30,30,-10,30,30,-69,-22,30,-25,-38,-31,30,-69,-36,-10,-10,30,30,-24,-41,]),';':([16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,59,60,61,62,69,77,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,103,106,113,115,116,117,122,129,130,133,134,135,136,137,138,139,140,142,143,144,148,155,157,160,163,164,165,172,174,176,177,180,183,188,189,],[-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-60,-61,-62,-63,-64,-10,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-82,-50,-51,-52,146,-68,-37,-74,-75,-78,-79,-80,-81,-83,-84,-27,-28,-29,-26,-68,168,-39,-35,-76,-77,-69,-22,-25,-38,-69,-36,-24,-41,]),')':([16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,41,59,60,61,62,63,66,67,69,84,85,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,113,115,116,117,118,119,120,121,123,125,126,129,130,133,134,135,136,137,138,139,140,142,143,144,148,153,154,155,160,163,164,165,168,172,174,175,176,177,180,183,188,189,],[-9,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-64,-49,-65,-59,-60,-61,-62,-63,100,103,106,-64,-43,-64,-44,-34,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,130,103,-67,-70,-82,-50,-51,-52,142,143,144,145,147,148,149,-68,-37,-74,-75,-78,-79,-80,-81,-83,-84,-27,-28,-29,-26,164,165,-68,-39,-35,-76,-77,-10,-69,-22,181,-25,-38,-69,-36,-24,-41,]),'+':([19,28,31,36,41,59,60,61,62,67,69,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,106,113,115,116,117,118,119,124,129,135,136,137,138,139,140,141,155,162,163,172,173,180,183,],[45,-64,-49,-65,-59,-60,-61,-62,-63,45,-64,-43,-64,-44,45,45,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,45,-67,-70,45,-50,-51,-52,45,45,45,-68,45,45,45,45,45,45,45,-68,45,45,-69,45,-69,45,]),'-':([19,28,31,36,41,59,60,61,62,67,69,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,106,113,115,116,117,118,119,124,129,135,136,137,138,139,140,141,155,162,163,172,173,180,183,],[46,-64,-49,-65,-59,-60,-61,-62,-63,46,-64,-43,-64,-44,46,46,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,46,-67,-70,46,-50,-51,-52,46,46,46,-68,46,46,46,46,46,46,46,-68,46,46,-69,46,-69,46,]),'=':([28,43,129,172,],[47,82,152,179,]),'[':([28,43,69,85,93,129,150,155,],[48,81,114,114,114,151,161,166,]),'addeq':([28,69,],[49,49,]),'subeq':([28,69,],[50,50,]),'addeql':([28,69,],[51,51,]),'subeql':([28,69,],[52,52,]),'muleq':([28,69,85,],[53,53,53,]),'diveq':([28,69,85,],[54,54,54,]),'modeq':([28,69,85,],[55,55,55,]),'muleql':([28,69,85,],[56,56,56,]),'diveql':([28,69,85,],[57,57,57,]),'modeql':([28,69,85,],[58,58,58,]),'plus':([28,69,85,93,],[59,59,59,59,]),'plusl':([28,69,85,93,],[60,60,60,60,]),'minus':([28,69,85,93,],[61,61,61,61,]),'minusl':([28,69,85,93,],[62,62,62,62,]),'*':([28,31,36,41,59,60,61,62,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,129,155,172,180,],[-64,70,-65,-59,-60,-61,-62,-63,-64,70,-64,70,70,70,70,70,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,-68,-68,-69,-69,]),'/':([28,31,36,41,59,60,61,62,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,129,155,172,180,],[-64,71,-65,-59,-60,-61,-62,-63,-64,71,-64,71,71,71,71,71,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,-68,-68,-69,-69,]),'%':([28,31,36,41,59,60,61,62,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,129,155,172,180,],[-64,72,-65,-59,-60,-61,-62,-63,-64,72,-64,72,72,72,72,72,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,-68,-68,-69,-69,]),'not':([30,65,78,80,104,105,131,132,146,],[68,68,68,68,68,68,68,68,68,]),'sup':([31,36,41,59,60,61,62,67,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,124,155,180,],[-49,-65,-59,-60,-61,-62,-63,107,-64,-43,-64,-44,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,107,-68,-69,]),'inf':([31,36,41,59,60,61,62,67,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,124,155,180,],[-49,-65,-59,-60,-61,-62,-63,108,-64,-43,-64,-44,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,108,-68,-69,]),'supeq':([31,36,41,59,60,61,62,67,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,124,155,180,],[-49,-65,-59,-60,-61,-62,-63,109,-64,-43,-64,-44,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,109,-68,-69,]),'infeq':([31,36,41,59,60,61,62,67,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,124,155,180,],[-49,-65,-59,-60,-61,-62,-63,110,-64,-43,-64,-44,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,110,-68,-69,]),'eq':([31,36,41,59,60,61,62,67,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,124,155,180,],[-49,-65,-59,-60,-61,-62,-63,111,-64,-43,-64,-44,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,111,-68,-69,]),'diff':([31,36,41,59,60,61,62,67,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,124,155,180,],[-49,-65,-59,-60,-61,-62,-63,112,-64,-43,-64,-44,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,112,-68,-69,]),']':([31,36,41,59,60,61,62,69,84,85,86,88,89,90,91,92,93,94,95,96,97,98,99,100,103,106,115,116,117,127,141,155,162,171,173,180,],[-49,-65,-59,-60,-61,-62,-63,-64,-43,-64,-44,129,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,-67,-70,-50,-51,-52,150,155,-68,172,178,180,-69,]),'and':([31,36,41,59,60,61,62,66,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,102,103,106,113,115,116,117,123,126,133,134,135,136,137,138,139,140,153,154,155,157,164,165,180,],[-49,-65,-59,-60,-61,-62,-63,104,-64,-43,-64,-44,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,131,-67,-70,-82,-50,-51,-52,104,104,104,104,-78,-79,-80,-81,-83,-84,104,104,-68,104,-76,-77,-69,]),'or':([31,36,41,59,60,61,62,66,69,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,102,103,106,113,115,116,117,123,126,133,134,135,136,137,138,139,140,153,154,155,157,164,165,180,],[-49,-65,-59,-60,-61,-62,-63,105,-64,-43,-64,-44,-45,-46,-47,-48,-64,-53,-54,-55,-56,-57,-58,-66,132,-67,-70,-82,-50,-51,-52,105,105,105,105,-78,-79,-80,-81,-83,-84,105,105,-68,105,-76,-77,-69,]),'string':([75,],[120,]),'else':([177,],[182,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Prog':([0,],[1,]),'MainBlc':([0,],[2,]),'DefBlcs':([2,],[4,]),'DefBlc':([4,],[6,]),'VarBlc':([5,10,],[8,14,]),'Dcls':([5,10,],[9,9,]),'Insts':([8,14,77,156,158,159,168,184,185,],[11,44,122,167,169,170,175,186,187,]),'Dcl':([9,],[12,]),'Inst':([11,44,122,149,167,169,170,175,186,187,],[16,16,16,160,16,16,16,16,16,16,]),'Attr':([11,44,122,149,167,169,170,175,186,187,],[17,17,17,17,17,17,17,17,17,17,]),'Return':([11,44,122,149,167,169,170,175,186,187,],[18,18,18,18,18,18,18,18,18,18,]),'Exp':([11,30,44,47,48,64,65,68,73,74,78,80,104,105,107,108,109,110,111,112,114,122,131,132,146,149,151,152,166,167,169,170,175,179,186,187,],[19,67,19,87,88,101,67,113,118,119,124,124,124,124,135,136,137,138,139,140,141,19,124,124,124,19,162,163,173,19,19,19,19,183,19,19,]),'Print':([11,44,122,149,167,169,170,175,186,187,],[20,20,20,20,20,20,20,20,20,20,]),'Println':([11,44,122,149,167,169,170,175,186,187,],[21,21,21,21,21,21,21,21,21,21,]),'Prints':([11,44,122,149,167,169,170,175,186,187,],[22,22,22,22,22,22,22,22,22,22,]),'Repeat':([11,44,122,149,167,169,170,175,186,187,],[23,23,23,23,23,23,23,23,23,23,]),'For':([11,44,122,149,167,169,170,175,186,187,],[24,24,24,24,24,24,24,24,24,24,]),'While':([11,44,122,149,167,169,170,175,186,187,],[25,25,25,25,25,25,25,25,25,25,]),'Read':([11,44,122,149,167,169,170,175,186,187,],[26,26,26,26,26,26,26,26,26,26,]),'If':([11,44,122,149,167,169,170,175,186,187,],[27,27,27,27,27,27,27,27,27,27,]),'Term':([11,30,44,45,46,47,48,49,50,51,52,64,65,68,73,74,78,80,104,105,107,108,109,110,111,112,114,122,131,132,146,149,151,152,166,167,169,170,175,179,186,187,],[31,31,31,84,86,31,31,89,90,91,92,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'RepeatS':([11,44,122,149,167,169,170,175,186,187,],[35,35,35,35,35,35,35,35,35,35,]),'Factor':([11,30,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,64,65,68,70,71,72,73,74,78,80,104,105,107,108,109,110,111,112,114,122,131,132,146,149,151,152,166,167,169,170,175,179,186,187,],[41,41,41,41,41,41,41,41,41,41,41,94,95,96,97,98,99,41,41,41,115,116,117,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'Cond':([30,65,78,80,104,105,131,132,146,],[66,102,123,126,133,134,153,154,157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Prog","S'",1,None,None,None),
  ('Prog -> MainBlc DefBlcs','Prog',2,'p_Prog','compiler_yacc.py',108),
  ('DefBlcs -> DefBlcs DefBlc','DefBlcs',2,'p_DefBlcs','compiler_yacc.py',112),
  ('DefBlcs -> <empty>','DefBlcs',0,'p_Def_End','compiler_yacc.py',116),
  ('DefBlc -> id { VarBlc Insts }','DefBlc',5,'p_DefBlc','compiler_yacc.py',120),
  ('VarBlc -> Dcls','VarBlc',1,'p_VarBlc','compiler_yacc.py',131),
  ('Dcls -> Dcls Dcl','Dcls',2,'p_Dcls','compiler_yacc.py',139),
  ('Dcls -> <empty>','Dcls',0,'p_Dcls_End','compiler_yacc.py',144),
  ('MainBlc -> main { VarBlc Insts }','MainBlc',5,'p_MainBlc','compiler_yacc.py',148),
  ('Insts -> Insts Inst','Insts',2,'p_Insts','compiler_yacc.py',158),
  ('Insts -> <empty>','Insts',0,'p_Insts_End','compiler_yacc.py',162),
  ('Inst -> Attr','Inst',1,'p_Inst_Attr','compiler_yacc.py',166),
  ('Inst -> Return','Inst',1,'p_Inst_Return','compiler_yacc.py',171),
  ('Inst -> Exp','Inst',1,'p_Inst_Exp','compiler_yacc.py',175),
  ('Inst -> Print','Inst',1,'p_Inst_Print','compiler_yacc.py',179),
  ('Inst -> Println','Inst',1,'p_Inst_Println','compiler_yacc.py',184),
  ('Inst -> Prints','Inst',1,'p_Inst_Prints','compiler_yacc.py',189),
  ('Inst -> Repeat','Inst',1,'p_Inst_Repeat','compiler_yacc.py',195),
  ('Inst -> For','Inst',1,'p_Inst_For','compiler_yacc.py',200),
  ('Inst -> While','Inst',1,'p_Inst_While','compiler_yacc.py',204),
  ('Inst -> Read','Inst',1,'p_Inst_Read','compiler_yacc.py',208),
  ('Inst -> If','Inst',1,'p_Inst_If','compiler_yacc.py',213),
  ('Repeat -> RepeatS ( num ) { Insts }','Repeat',7,'p_Repeat','compiler_yacc.py',220),
  ('RepeatS -> repeat','RepeatS',1,'p_RepeatS','compiler_yacc.py',261),
  ('For -> for ( Insts ; Cond ; Insts ) { Insts }','For',11,'p_For','compiler_yacc.py',275),
  ('While -> while ( Cond ) { Insts }','While',7,'p_While','compiler_yacc.py',286),
  ('Read -> read ( id )','Read',4,'p_Read','compiler_yacc.py',297),
  ('Print -> print ( Exp )','Print',4,'p_Print','compiler_yacc.py',305),
  ('Println -> println ( Exp )','Println',4,'p_Println','compiler_yacc.py',312),
  ('Prints -> prints ( string )','Prints',4,'p_Prints','compiler_yacc.py',324),
  ('Dcl -> int id [ num ]','Dcl',5,'p_Dcl_Arr','compiler_yacc.py',331),
  ('Dcl -> int id [ num ] [ num ]','Dcl',8,'p_Dcl_Arr_2D','compiler_yacc.py',338),
  ('Dcl -> int id','Dcl',2,'p_Dcl_0','compiler_yacc.py',345),
  ('Dcl -> int id = num','Dcl',4,'p_Dcl_num','compiler_yacc.py',352),
  ('Attr -> id = Exp','Attr',3,'p_Attr','compiler_yacc.py',359),
  ('Attr -> id [ Exp ] = Exp','Attr',6,'p_Attr_arr','compiler_yacc.py',368),
  ('Attr -> id [ Exp ] [ Exp ] = Exp','Attr',9,'p_Attr_arr2D','compiler_yacc.py',385),
  ('Return -> return ( Exp )','Return',4,'p_Return','compiler_yacc.py',409),
  ('If -> if ( Cond ) { Insts }','If',7,'p_If','compiler_yacc.py',415),
  ('If -> if ( Cond ) Inst','If',5,'p_If_0','compiler_yacc.py',430),
  ('IfStart -> if ( Cond )','IfStart',4,'p_IfStart','compiler_yacc.py',445),
  ('If -> if ( Cond ) { Insts } else { Insts }','If',11,'p_If_Else','compiler_yacc.py',455),
  ('ElseStart -> else','ElseStart',1,'p_ElseStart','compiler_yacc.py',478),
  ('Exp -> Exp + Term','Exp',3,'p_Exp_add','compiler_yacc.py',491),
  ('Exp -> Exp - Term','Exp',3,'p_Exp_sub','compiler_yacc.py',495),
  ('Exp -> id addeq Term','Exp',3,'p_Exp_id_addeq','compiler_yacc.py',499),
  ('Exp -> id subeq Term','Exp',3,'p_Exp_id_subeq','compiler_yacc.py',507),
  ('Exp -> id addeql Term','Exp',3,'p_Exp_id_addeql','compiler_yacc.py',515),
  ('Exp -> id subeql Term','Exp',3,'p_Exp_id_subeql','compiler_yacc.py',523),
  ('Exp -> Term','Exp',1,'p_Exp_term','compiler_yacc.py',531),
  ('Term -> Term * Factor','Term',3,'p_Term_mul','compiler_yacc.py',535),
  ('Term -> Term / Factor','Term',3,'p_Term_div','compiler_yacc.py',539),
  ('Term -> Term % Factor','Term',3,'p_Term_mod','compiler_yacc.py',543),
  ('Term -> id muleq Factor','Term',3,'p_Term_id_muleq','compiler_yacc.py',547),
  ('Term -> id diveq Factor','Term',3,'p_Term_id_diveq','compiler_yacc.py',555),
  ('Term -> id modeq Factor','Term',3,'p_Term_id_modeq','compiler_yacc.py',563),
  ('Term -> id muleql Factor','Term',3,'p_Term_id_muleql','compiler_yacc.py',572),
  ('Term -> id diveql Factor','Term',3,'p_Term_id_diveql','compiler_yacc.py',580),
  ('Term -> id modeql Factor','Term',3,'p_Term_id_modeql','compiler_yacc.py',588),
  ('Term -> Factor','Term',1,'p_Term_factor','compiler_yacc.py',596),
  ('Factor -> id plus','Factor',2,'p_Factor_id_plus','compiler_yacc.py',600),
  ('Factor -> id plusl','Factor',2,'p_Factor_id_plusl','compiler_yacc.py',608),
  ('Factor -> id minus','Factor',2,'p_Factor_id_minus','compiler_yacc.py',616),
  ('Factor -> id minusl','Factor',2,'p_Factor_id_minusl','compiler_yacc.py',624),
  ('Factor -> id','Factor',1,'p_Factor_id','compiler_yacc.py',632),
  ('Factor -> num','Factor',1,'p_Factor_num','compiler_yacc.py',636),
  ('Factor -> id ( )','Factor',3,'p_Factor_call','compiler_yacc.py',640),
  ('Factor -> ( Cond )','Factor',3,'p_Factor_cond','compiler_yacc.py',646),
  ('Factor -> id [ Exp ]','Factor',4,'p_Factor_arr','compiler_yacc.py',651),
  ('Factor -> id [ Exp ] [ Exp ]','Factor',7,'p_Factor_arr_2d','compiler_yacc.py',658),
  ('Factor -> ( Exp )','Factor',3,'p_Factor_group','compiler_yacc.py',668),
  ('Id -> id','Id',1,'p_Id','compiler_yacc.py',673),
  ('Id -> id [ Exp ]','Id',4,'p_Id_arr','compiler_yacc.py',677),
  ('Id -> id [ Exp ] [ Exp ]','Id',7,'p_Id_arr_2d','compiler_yacc.py',684),
  ('Cond -> Cond and Cond','Cond',3,'p_Cond_and','compiler_yacc.py',693),
  ('Cond -> Cond or Cond','Cond',3,'p_Cond_or','compiler_yacc.py',697),
  ('Cond -> ( Cond and Cond )','Cond',5,'p_Cond_and_par','compiler_yacc.py',702),
  ('Cond -> ( Cond or Cond )','Cond',5,'p_Cond_or_par','compiler_yacc.py',706),
  ('Cond -> Exp sup Exp','Cond',3,'p_Cond_sup','compiler_yacc.py',711),
  ('Cond -> Exp inf Exp','Cond',3,'p_Cond_inf','compiler_yacc.py',715),
  ('Cond -> Exp supeq Exp','Cond',3,'p_Cond_supeq','compiler_yacc.py',719),
  ('Cond -> Exp infeq Exp','Cond',3,'p_Cond_infeq','compiler_yacc.py',723),
  ('Cond -> not Exp','Cond',2,'p_Cond_not','compiler_yacc.py',727),
  ('Cond -> Exp eq Exp','Cond',3,'p_Cond_eq','compiler_yacc.py',731),
  ('Cond -> Exp diff Exp','Cond',3,'p_Cond_diff','compiler_yacc.py',735),
]
