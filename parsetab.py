
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "num id int print println prints string vars main repeat read sup inf eq supeq infeq not diff and or if else for while plus addeq subeq diveq muleq addeql subeql diveql muleql minus plusl minusl modeq modeql return global gidProg :  GlobalBlc MainBlc DefBlcsDefBlcs : DefBlcs DefBlc DefBlcs : DefBlc : id '{' VarBlc Insts '}' VarBlc : BlcInt GlobalBlc : global '{' DclGs '}' GlobalBlc : DclGs : DclGs DclGlobalDclGs : Dcls : Dcls DclDcls : MainBlc : main '{' VarBlc Insts '}'Insts : Insts Inst Insts :Inst : AttrInst : ReturnInst : ExpInst : PrintInst : PrintlnInst : PrintsInst : RepeatInst : ForInst : WhileInst : ReadInst : IfRepeat : RepeatS '(' num ')' '{' Insts '}' RepeatS : repeatFor : for '(' Insts ';' Cond ';' Insts ')' '{' Insts '}'While : while '(' Cond ')' '{' Insts '}'Read : read '(' id ')'Print : print '(' Exp ')'Println : println '(' Exp ')'Prints : prints '(' string ')'BlcInt : int '{' Dcls '}' Dcl : id '[' num ']'Dcl : id '[' num ']' '[' num ']'Dcl : idDcl : id '=' numDclGlobal : int id '[' num ']'DclGlobal : int id '[' num ']' '[' num ']'DclGlobal : int idDclGlobal : int id '=' numAttr : id '=' ExpAttr : id '[' Exp ']' '=' ExpAttr : id '[' Exp ']' '[' Exp ']' '=' ExpAttr : gid '=' ExpAttr : gid '[' Exp ']' '=' ExpAttr : gid '[' Exp ']' '[' Exp ']' '=' ExpReturn : return '(' Exp ')'If : if '(' Cond ')' '{' Insts '}' If : if '(' Cond ')' Inst IfStart : if '(' Cond ')'If : if '(' Cond ')' '{' Insts '}' else '{' Insts '}'ElseStart : else Exp : Exp '+' TermExp : Exp '-' TermExp : id addeq TermExp : id subeq TermExp : id addeql TermExp : id subeql TermExp : TermTerm : Term '*' FactorTerm : Term '/' FactorTerm : Term '%' FactorTerm : id muleq FactorTerm : id diveq FactorTerm : id modeq FactorTerm : id muleql FactorTerm : id diveql FactorTerm : id modeql FactorTerm : FactorFactor : id plusFactor : id pluslFactor : id minusFactor : id minuslFactor : idFactor : gidFactor : numFactor : id '(' ')' Factor : '(' Cond ')'Factor : id '[' Exp ']'Factor : id '[' Exp ']' '[' Exp ']'Factor : gid '[' Exp ']'Factor : gid '[' Exp ']' '[' Exp ']'Factor : '(' Exp ')'Id : idId : id '[' Exp ']'Id : id '[' Exp ']' '[' Exp ']'Cond : Cond and CondCond : Cond or CondCond : '(' Cond and Cond ')'Cond : '(' Cond or Cond ')' Cond : Exp sup ExpCond : Exp inf ExpCond : Exp supeq ExpCond : Exp infeq ExpCond : not ExpCond : Exp eq ExpCond : Exp diff Exp"
    
_lr_action_items = {'global':([0,],[3,]),'main':([0,2,15,],[-7,5,-6,]),'$end':([1,4,7,10,23,100,],[0,-3,-1,-2,-12,-4,]),'{':([3,5,11,14,168,170,172,218,219,],[6,8,18,20,184,186,187,223,224,]),'id':([4,7,10,12,13,17,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,45,50,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,142,150,151,152,153,154,165,166,167,169,171,172,174,176,177,178,179,182,183,184,186,187,188,189,192,194,197,198,199,200,201,202,205,206,209,210,211,212,214,215,216,217,220,221,222,223,224,225,226,227,228,],[-3,11,-2,-14,-5,21,36,-11,-14,-12,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,82,-61,-78,-71,97,36,102,102,82,82,102,102,102,102,110,110,110,110,110,110,-72,-73,-74,-75,82,82,82,82,82,-76,-77,110,110,110,82,82,-14,82,145,82,-34,-10,-37,-4,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,82,82,-85,82,82,82,82,82,82,82,82,-62,-63,-64,36,-81,-83,-49,82,82,-31,-32,-33,82,-30,36,-38,82,82,82,82,-81,-83,-14,-14,-14,-51,-35,-44,-47,82,82,36,-14,36,36,-82,-84,-26,36,-29,-50,82,82,-82,-84,-36,-45,-48,-14,-14,36,36,-28,-53,]),'}':([6,9,12,13,16,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,95,96,97,99,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,135,136,137,149,150,151,152,165,166,167,171,174,182,183,184,186,187,188,189,192,194,199,201,202,204,205,206,209,211,212,216,217,220,221,222,223,224,225,226,227,228,],[-9,15,-14,-5,-8,23,-11,-41,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,95,100,-72,-73,-74,-75,-76,-77,-34,-10,-37,-42,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-62,-63,-64,-39,-81,-83,-49,-31,-32,-33,-30,-38,-81,-83,-14,-14,-14,-51,-35,-44,-47,209,211,212,-40,-82,-84,-26,-29,-50,-82,-84,-36,-45,-48,-14,-14,227,228,-28,-53,]),'int':([6,8,9,16,18,21,99,149,204,],[-9,14,17,-8,14,-41,-42,-39,-40,]),'gid':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,45,50,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,81,82,83,84,85,86,87,88,91,92,94,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,142,150,151,152,153,154,165,166,167,169,171,172,176,177,178,179,182,183,184,186,187,188,192,194,197,198,199,200,201,202,205,206,209,210,211,212,214,215,216,217,221,222,223,224,225,226,227,228,],[-14,-5,37,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,83,-61,-78,-71,37,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-72,-73,-74,-75,83,83,83,83,83,-76,-77,83,83,83,83,83,-14,83,83,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,83,83,-85,83,83,83,83,83,83,83,83,-62,-63,-64,37,-81,-83,-49,83,83,-31,-32,-33,83,-30,37,83,83,83,83,-81,-83,-14,-14,-14,-51,-44,-47,83,83,37,-14,37,37,-82,-84,-26,37,-29,-50,83,83,-82,-84,-45,-48,-14,-14,37,37,-28,-53,]),'return':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,55,70,71,72,73,82,83,91,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,135,136,137,142,150,151,152,165,166,167,171,172,182,183,184,186,187,188,192,194,199,200,201,202,205,206,209,210,211,212,216,217,221,222,223,224,225,226,227,228,],[-14,-5,38,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,38,-72,-73,-74,-75,-76,-77,-14,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-62,-63,-64,38,-81,-83,-49,-31,-32,-33,-30,38,-81,-83,-14,-14,-14,-51,-44,-47,38,-14,38,38,-82,-84,-26,38,-29,-50,-82,-84,-45,-48,-14,-14,38,38,-28,-53,]),'print':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,55,70,71,72,73,82,83,91,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,135,136,137,142,150,151,152,165,166,167,171,172,182,183,184,186,187,188,192,194,199,200,201,202,205,206,209,210,211,212,216,217,221,222,223,224,225,226,227,228,],[-14,-5,41,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,41,-72,-73,-74,-75,-76,-77,-14,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-62,-63,-64,41,-81,-83,-49,-31,-32,-33,-30,41,-81,-83,-14,-14,-14,-51,-44,-47,41,-14,41,41,-82,-84,-26,41,-29,-50,-82,-84,-45,-48,-14,-14,41,41,-28,-53,]),'println':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,55,70,71,72,73,82,83,91,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,135,136,137,142,150,151,152,165,166,167,171,172,182,183,184,186,187,188,192,194,199,200,201,202,205,206,209,210,211,212,216,217,221,222,223,224,225,226,227,228,],[-14,-5,42,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,42,-72,-73,-74,-75,-76,-77,-14,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-62,-63,-64,42,-81,-83,-49,-31,-32,-33,-30,42,-81,-83,-14,-14,-14,-51,-44,-47,42,-14,42,42,-82,-84,-26,42,-29,-50,-82,-84,-45,-48,-14,-14,42,42,-28,-53,]),'prints':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,55,70,71,72,73,82,83,91,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,135,136,137,142,150,151,152,165,166,167,171,172,182,183,184,186,187,188,192,194,199,200,201,202,205,206,209,210,211,212,216,217,221,222,223,224,225,226,227,228,],[-14,-5,43,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,43,-72,-73,-74,-75,-76,-77,-14,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-62,-63,-64,43,-81,-83,-49,-31,-32,-33,-30,43,-81,-83,-14,-14,-14,-51,-44,-47,43,-14,43,43,-82,-84,-26,43,-29,-50,-82,-84,-45,-48,-14,-14,43,43,-28,-53,]),'for':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,55,70,71,72,73,82,83,91,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,135,136,137,142,150,151,152,165,166,167,171,172,182,183,184,186,187,188,192,194,199,200,201,202,205,206,209,210,211,212,216,217,221,222,223,224,225,226,227,228,],[-14,-5,46,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,46,-72,-73,-74,-75,-76,-77,-14,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-62,-63,-64,46,-81,-83,-49,-31,-32,-33,-30,46,-81,-83,-14,-14,-14,-51,-44,-47,46,-14,46,46,-82,-84,-26,46,-29,-50,-82,-84,-45,-48,-14,-14,46,46,-28,-53,]),'while':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,55,70,71,72,73,82,83,91,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,135,136,137,142,150,151,152,165,166,167,171,172,182,183,184,186,187,188,192,194,199,200,201,202,205,206,209,210,211,212,216,217,221,222,223,224,225,226,227,228,],[-14,-5,47,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,47,-72,-73,-74,-75,-76,-77,-14,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-62,-63,-64,47,-81,-83,-49,-31,-32,-33,-30,47,-81,-83,-14,-14,-14,-51,-44,-47,47,-14,47,47,-82,-84,-26,47,-29,-50,-82,-84,-45,-48,-14,-14,47,47,-28,-53,]),'read':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,55,70,71,72,73,82,83,91,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,135,136,137,142,150,151,152,165,166,167,171,172,182,183,184,186,187,188,192,194,199,200,201,202,205,206,209,210,211,212,216,217,221,222,223,224,225,226,227,228,],[-14,-5,48,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,48,-72,-73,-74,-75,-76,-77,-14,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-62,-63,-64,48,-81,-83,-49,-31,-32,-33,-30,48,-81,-83,-14,-14,-14,-51,-44,-47,48,-14,48,48,-82,-84,-26,48,-29,-50,-82,-84,-45,-48,-14,-14,48,48,-28,-53,]),'if':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,55,70,71,72,73,82,83,91,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,135,136,137,142,150,151,152,165,166,167,171,172,182,183,184,186,187,188,192,194,199,200,201,202,205,206,209,210,211,212,216,217,221,222,223,224,225,226,227,228,],[-14,-5,49,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,49,-72,-73,-74,-75,-76,-77,-14,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-62,-63,-64,49,-81,-83,-49,-31,-32,-33,-30,49,-81,-83,-14,-14,-14,-51,-44,-47,49,-14,49,49,-82,-84,-26,49,-29,-50,-82,-84,-45,-48,-14,-14,49,49,-28,-53,]),'repeat':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,55,70,71,72,73,82,83,91,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,135,136,137,142,150,151,152,165,166,167,171,172,182,183,184,186,187,188,192,194,199,200,201,202,205,206,209,210,211,212,216,217,221,222,223,224,225,226,227,228,],[-14,-5,51,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,51,-72,-73,-74,-75,-76,-77,-14,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-62,-63,-64,51,-81,-83,-49,-31,-32,-33,-30,51,-81,-83,-14,-14,-14,-51,-44,-47,51,-14,51,51,-82,-84,-26,51,-29,-50,-82,-84,-45,-48,-14,-14,51,51,-28,-53,]),'num':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,45,50,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,81,82,83,84,85,86,87,88,90,91,92,94,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,142,147,148,150,151,152,153,154,165,166,167,169,171,172,175,176,177,178,179,182,183,184,186,187,188,192,194,197,198,199,200,201,202,203,205,206,209,210,211,212,214,215,216,217,221,222,223,224,225,226,227,228,],[-14,-5,45,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,45,-61,-78,-71,98,99,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-72,-73,-74,-75,45,45,45,45,45,-76,-77,45,45,45,45,45,141,-14,45,45,-34,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,45,45,-85,45,45,45,45,45,45,45,45,-62,-63,-64,45,173,174,-81,-83,-49,45,45,-31,-32,-33,45,-30,45,190,45,45,45,45,-81,-83,-14,-14,-14,-51,-44,-47,45,45,45,-14,45,45,213,-82,-84,-26,45,-29,-50,45,45,-82,-84,-45,-48,-14,-14,45,45,-28,-53,]),'(':([12,13,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,81,82,83,84,85,86,87,88,91,92,94,95,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,142,150,151,152,153,154,165,166,167,169,171,172,176,177,178,179,182,183,184,186,187,188,192,194,197,198,199,200,201,202,205,206,209,210,211,212,214,215,216,217,221,222,223,224,225,226,227,228,],[-14,-5,39,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,74,-77,77,78,-61,87,88,89,90,-78,91,92,93,94,-71,-27,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-72,-73,-74,-75,39,39,39,78,39,74,-77,39,39,39,39,39,-14,78,78,-34,-55,74,-56,-43,-57,-58,-59,-60,74,-65,-66,-67,-68,-69,-70,-79,-46,-80,78,78,-85,39,39,39,39,39,39,39,39,-62,-63,-64,39,-81,-83,-49,78,78,-31,-32,-33,78,-30,39,39,39,39,39,-81,-83,-14,-14,-14,-51,-44,-47,39,39,39,-14,39,39,-82,-84,-26,39,-29,-50,39,39,-82,-84,-45,-48,-14,-14,39,39,-28,-53,]),'[':([21,36,37,82,83,97,102,110,149,150,151,182,183,189,],[53,59,76,133,134,147,133,133,175,176,178,197,198,203,]),'=':([21,36,37,97,150,151,205,206,],[54,58,75,148,177,179,214,215,]),';':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,70,71,72,73,82,83,91,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,122,125,132,135,136,137,142,150,151,152,155,156,157,158,159,160,161,162,165,166,167,171,182,183,185,188,192,194,195,196,205,206,209,211,212,216,217,221,222,227,228,],[-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,-72,-73,-74,-75,-76,-77,-14,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,-80,-85,-97,-62,-63,-64,169,-81,-83,-49,-89,-90,-93,-94,-95,-96,-98,-99,-31,-32,-33,-30,-81,-83,200,-51,-44,-47,-91,-92,-82,-84,-26,-29,-50,-82,-84,-45,-48,-28,-53,]),')':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,70,71,72,73,74,79,80,82,83,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,120,121,122,125,132,135,136,137,138,139,140,141,143,145,146,150,151,152,155,156,157,158,159,160,161,162,165,166,167,171,180,181,182,183,188,192,194,195,196,200,205,206,209,210,211,212,216,217,221,222,227,228,],[-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-76,-77,-61,-78,-71,-72,-73,-74,-75,117,122,125,-76,-77,-55,-76,-56,-43,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-46,152,122,-80,-85,-97,-62,-63,-64,165,166,167,168,170,171,172,-81,-83,-49,-89,-90,-93,-94,-95,-96,-98,-99,-31,-32,-33,-30,195,196,-81,-83,-51,-44,-47,-91,-92,-14,-82,-84,-26,218,-29,-50,-82,-84,-45,-48,-28,-53,]),'+':([27,36,37,40,45,50,70,71,72,73,80,82,83,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,132,135,136,137,138,139,144,150,151,157,158,159,160,161,162,163,164,182,183,191,192,193,194,205,206,207,208,216,217,221,222,],[56,-76,-77,-61,-78,-71,-72,-73,-74,-75,56,-76,-77,-55,-76,-56,56,56,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,56,56,56,-80,-85,56,-62,-63,-64,56,56,56,-81,-83,56,56,56,56,56,56,56,56,-81,-83,56,56,56,56,-82,-84,56,56,-82,-84,56,56,]),'-':([27,36,37,40,45,50,70,71,72,73,80,82,83,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,122,125,132,135,136,137,138,139,144,150,151,157,158,159,160,161,162,163,164,182,183,191,192,193,194,205,206,207,208,216,217,221,222,],[57,-76,-77,-61,-78,-71,-72,-73,-74,-75,57,-76,-77,-55,-76,-56,57,57,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,57,57,57,-80,-85,57,-62,-63,-64,57,57,57,-81,-83,57,57,57,57,57,57,57,57,-81,-83,57,57,57,57,-82,-84,57,57,-82,-84,57,57,]),'addeq':([36,82,],[60,60,]),'subeq':([36,82,],[61,61,]),'addeql':([36,82,],[62,62,]),'subeql':([36,82,],[63,63,]),'muleq':([36,82,102,],[64,64,64,]),'diveq':([36,82,102,],[65,65,65,]),'modeq':([36,82,102,],[66,66,66,]),'muleql':([36,82,102,],[67,67,67,]),'diveql':([36,82,102,],[68,68,68,]),'modeql':([36,82,102,],[69,69,69,]),'plus':([36,82,102,110,],[70,70,70,70,]),'plusl':([36,82,102,110,],[71,71,71,71,]),'minus':([36,82,102,110,],[72,72,72,72,]),'minusl':([36,82,102,110,],[73,73,73,73,]),'*':([36,37,40,45,50,70,71,72,73,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,122,125,135,136,137,150,151,182,183,205,206,216,217,],[-76,-77,84,-78,-71,-72,-73,-74,-75,-76,-77,84,-76,84,84,84,84,84,-76,-65,-66,-67,-68,-69,-70,-79,-80,-85,-62,-63,-64,-81,-83,-81,-83,-82,-84,-82,-84,]),'/':([36,37,40,45,50,70,71,72,73,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,122,125,135,136,137,150,151,182,183,205,206,216,217,],[-76,-77,85,-78,-71,-72,-73,-74,-75,-76,-77,85,-76,85,85,85,85,85,-76,-65,-66,-67,-68,-69,-70,-79,-80,-85,-62,-63,-64,-81,-83,-81,-83,-82,-84,-82,-84,]),'%':([36,37,40,45,50,70,71,72,73,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,122,125,135,136,137,150,151,182,183,205,206,216,217,],[-76,-77,86,-78,-71,-72,-73,-74,-75,-76,-77,86,-76,86,86,86,86,86,-76,-65,-66,-67,-68,-69,-70,-79,-80,-85,-62,-63,-64,-81,-83,-81,-83,-82,-84,-82,-84,]),'not':([39,78,92,94,123,124,153,154,169,],[81,81,81,81,81,81,81,81,81,]),'sup':([40,45,50,70,71,72,73,80,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,122,125,135,136,137,144,182,183,216,217,],[-61,-78,-71,-72,-73,-74,-75,126,-76,-77,-55,-76,-56,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-80,-85,-62,-63,-64,126,-81,-83,-82,-84,]),'inf':([40,45,50,70,71,72,73,80,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,122,125,135,136,137,144,182,183,216,217,],[-61,-78,-71,-72,-73,-74,-75,127,-76,-77,-55,-76,-56,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-80,-85,-62,-63,-64,127,-81,-83,-82,-84,]),'supeq':([40,45,50,70,71,72,73,80,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,122,125,135,136,137,144,182,183,216,217,],[-61,-78,-71,-72,-73,-74,-75,128,-76,-77,-55,-76,-56,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-80,-85,-62,-63,-64,128,-81,-83,-82,-84,]),'infeq':([40,45,50,70,71,72,73,80,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,122,125,135,136,137,144,182,183,216,217,],[-61,-78,-71,-72,-73,-74,-75,129,-76,-77,-55,-76,-56,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-80,-85,-62,-63,-64,129,-81,-83,-82,-84,]),'eq':([40,45,50,70,71,72,73,80,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,122,125,135,136,137,144,182,183,216,217,],[-61,-78,-71,-72,-73,-74,-75,130,-76,-77,-55,-76,-56,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-80,-85,-62,-63,-64,130,-81,-83,-82,-84,]),'diff':([40,45,50,70,71,72,73,80,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,122,125,135,136,137,144,182,183,216,217,],[-61,-78,-71,-72,-73,-74,-75,131,-76,-77,-55,-76,-56,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,-80,-85,-62,-63,-64,131,-81,-83,-82,-84,]),']':([40,45,50,70,71,72,73,82,83,98,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,122,125,135,136,137,163,164,173,182,183,190,191,193,207,208,213,216,217,],[-61,-78,-71,-72,-73,-74,-75,-76,-77,149,-55,-76,-56,150,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,151,-80,-85,-62,-63,-64,182,183,189,-81,-83,204,205,206,216,217,220,-82,-84,]),'and':([40,45,50,70,71,72,73,79,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,121,122,125,132,135,136,137,143,146,155,156,157,158,159,160,161,162,180,181,182,183,185,195,196,216,217,],[-61,-78,-71,-72,-73,-74,-75,123,-76,-77,-55,-76,-56,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,153,-80,-85,-97,-62,-63,-64,123,123,123,123,-93,-94,-95,-96,-98,-99,123,123,-81,-83,123,-91,-92,-82,-84,]),'or':([40,45,50,70,71,72,73,79,82,83,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,121,122,125,132,135,136,137,143,146,155,156,157,158,159,160,161,162,180,181,182,183,185,195,196,216,217,],[-61,-78,-71,-72,-73,-74,-75,124,-76,-77,-55,-76,-56,-57,-58,-59,-60,-76,-65,-66,-67,-68,-69,-70,-79,154,-80,-85,-97,-62,-63,-64,124,124,124,124,-93,-94,-95,-96,-98,-99,124,124,-81,-83,124,-91,-92,-82,-84,]),'string':([89,],[140,]),'else':([212,],[219,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Prog':([0,],[1,]),'GlobalBlc':([0,],[2,]),'MainBlc':([2,],[4,]),'DefBlcs':([4,],[7,]),'DclGs':([6,],[9,]),'DefBlc':([7,],[10,]),'VarBlc':([8,18,],[12,22,]),'BlcInt':([8,18,],[13,13,]),'DclGlobal':([9,],[16,]),'Insts':([12,22,91,184,186,187,200,223,224,],[19,55,142,199,201,202,210,225,226,]),'Inst':([19,55,142,172,199,201,202,210,225,226,],[24,24,24,188,24,24,24,24,24,24,]),'Attr':([19,55,142,172,199,201,202,210,225,226,],[25,25,25,25,25,25,25,25,25,25,]),'Return':([19,55,142,172,199,201,202,210,225,226,],[26,26,26,26,26,26,26,26,26,26,]),'Exp':([19,39,55,58,59,75,76,77,78,81,87,88,92,94,123,124,126,127,128,129,130,131,133,134,142,153,154,169,172,176,177,178,179,197,198,199,201,202,210,214,215,225,226,],[27,80,27,104,105,118,119,120,80,132,138,139,144,144,144,144,157,158,159,160,161,162,163,164,27,144,144,144,27,191,192,193,194,207,208,27,27,27,27,221,222,27,27,]),'Print':([19,55,142,172,199,201,202,210,225,226,],[28,28,28,28,28,28,28,28,28,28,]),'Println':([19,55,142,172,199,201,202,210,225,226,],[29,29,29,29,29,29,29,29,29,29,]),'Prints':([19,55,142,172,199,201,202,210,225,226,],[30,30,30,30,30,30,30,30,30,30,]),'Repeat':([19,55,142,172,199,201,202,210,225,226,],[31,31,31,31,31,31,31,31,31,31,]),'For':([19,55,142,172,199,201,202,210,225,226,],[32,32,32,32,32,32,32,32,32,32,]),'While':([19,55,142,172,199,201,202,210,225,226,],[33,33,33,33,33,33,33,33,33,33,]),'Read':([19,55,142,172,199,201,202,210,225,226,],[34,34,34,34,34,34,34,34,34,34,]),'If':([19,55,142,172,199,201,202,210,225,226,],[35,35,35,35,35,35,35,35,35,35,]),'Term':([19,39,55,56,57,58,59,60,61,62,63,75,76,77,78,81,87,88,92,94,123,124,126,127,128,129,130,131,133,134,142,153,154,169,172,176,177,178,179,197,198,199,201,202,210,214,215,225,226,],[40,40,40,101,103,40,40,106,107,108,109,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'RepeatS':([19,55,142,172,199,201,202,210,225,226,],[44,44,44,44,44,44,44,44,44,44,]),'Factor':([19,39,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,81,84,85,86,87,88,92,94,123,124,126,127,128,129,130,131,133,134,142,153,154,169,172,176,177,178,179,197,198,199,201,202,210,214,215,225,226,],[50,50,50,50,50,50,50,50,50,50,50,111,112,113,114,115,116,50,50,50,50,50,135,136,137,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'Dcls':([20,],[52,]),'Cond':([39,78,92,94,123,124,153,154,169,],[79,121,143,146,155,156,180,181,185,]),'Dcl':([52,],[96,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Prog","S'",1,None,None,None),
  ('Prog -> GlobalBlc MainBlc DefBlcs','Prog',3,'p_Prog','compiler_yacc.py',108),
  ('DefBlcs -> DefBlcs DefBlc','DefBlcs',2,'p_DefBlcs','compiler_yacc.py',112),
  ('DefBlcs -> <empty>','DefBlcs',0,'p_Def_End','compiler_yacc.py',116),
  ('DefBlc -> id { VarBlc Insts }','DefBlc',5,'p_DefBlc','compiler_yacc.py',120),
  ('VarBlc -> BlcInt','VarBlc',1,'p_VarBlc','compiler_yacc.py',131),
  ('GlobalBlc -> global { DclGs }','GlobalBlc',4,'p_GlobalBlc','compiler_yacc.py',140),
  ('GlobalBlc -> <empty>','GlobalBlc',0,'p_GlobalBlc_Null','compiler_yacc.py',144),
  ('DclGs -> DclGs DclGlobal','DclGs',2,'p_DclGs','compiler_yacc.py',148),
  ('DclGs -> <empty>','DclGs',0,'p_DclGs_End','compiler_yacc.py',153),
  ('Dcls -> Dcls Dcl','Dcls',2,'p_Dcls','compiler_yacc.py',157),
  ('Dcls -> <empty>','Dcls',0,'p_Dcls_End','compiler_yacc.py',162),
  ('MainBlc -> main { VarBlc Insts }','MainBlc',5,'p_MainBlc','compiler_yacc.py',166),
  ('Insts -> Insts Inst','Insts',2,'p_Insts','compiler_yacc.py',177),
  ('Insts -> <empty>','Insts',0,'p_Insts_End','compiler_yacc.py',181),
  ('Inst -> Attr','Inst',1,'p_Inst_Attr','compiler_yacc.py',185),
  ('Inst -> Return','Inst',1,'p_Inst_Return','compiler_yacc.py',190),
  ('Inst -> Exp','Inst',1,'p_Inst_Exp','compiler_yacc.py',194),
  ('Inst -> Print','Inst',1,'p_Inst_Print','compiler_yacc.py',198),
  ('Inst -> Println','Inst',1,'p_Inst_Println','compiler_yacc.py',203),
  ('Inst -> Prints','Inst',1,'p_Inst_Prints','compiler_yacc.py',208),
  ('Inst -> Repeat','Inst',1,'p_Inst_Repeat','compiler_yacc.py',214),
  ('Inst -> For','Inst',1,'p_Inst_For','compiler_yacc.py',219),
  ('Inst -> While','Inst',1,'p_Inst_While','compiler_yacc.py',223),
  ('Inst -> Read','Inst',1,'p_Inst_Read','compiler_yacc.py',227),
  ('Inst -> If','Inst',1,'p_Inst_If','compiler_yacc.py',232),
  ('Repeat -> RepeatS ( num ) { Insts }','Repeat',7,'p_Repeat','compiler_yacc.py',239),
  ('RepeatS -> repeat','RepeatS',1,'p_RepeatS','compiler_yacc.py',280),
  ('For -> for ( Insts ; Cond ; Insts ) { Insts }','For',11,'p_For','compiler_yacc.py',294),
  ('While -> while ( Cond ) { Insts }','While',7,'p_While','compiler_yacc.py',305),
  ('Read -> read ( id )','Read',4,'p_Read','compiler_yacc.py',316),
  ('Print -> print ( Exp )','Print',4,'p_Print','compiler_yacc.py',324),
  ('Println -> println ( Exp )','Println',4,'p_Println','compiler_yacc.py',331),
  ('Prints -> prints ( string )','Prints',4,'p_Prints','compiler_yacc.py',343),
  ('BlcInt -> int { Dcls }','BlcInt',4,'p_BlcInc','compiler_yacc.py',350),
  ('Dcl -> id [ num ]','Dcl',4,'p_Dcl_Arr','compiler_yacc.py',353),
  ('Dcl -> id [ num ] [ num ]','Dcl',7,'p_Dcl_Arr_2D','compiler_yacc.py',360),
  ('Dcl -> id','Dcl',1,'p_Dcl_0','compiler_yacc.py',367),
  ('Dcl -> id = num','Dcl',3,'p_Dcl_num','compiler_yacc.py',374),
  ('DclGlobal -> int id [ num ]','DclGlobal',5,'p_DclGlobal_Arr','compiler_yacc.py',382),
  ('DclGlobal -> int id [ num ] [ num ]','DclGlobal',8,'p_DclGlobal_Arr_2D','compiler_yacc.py',389),
  ('DclGlobal -> int id','DclGlobal',2,'p_DclGlobal_0','compiler_yacc.py',396),
  ('DclGlobal -> int id = num','DclGlobal',4,'p_DclGlobal_num','compiler_yacc.py',403),
  ('Attr -> id = Exp','Attr',3,'p_Attr','compiler_yacc.py',410),
  ('Attr -> id [ Exp ] = Exp','Attr',6,'p_Attr_arr','compiler_yacc.py',419),
  ('Attr -> id [ Exp ] [ Exp ] = Exp','Attr',9,'p_Attr_arr2D','compiler_yacc.py',436),
  ('Attr -> gid = Exp','Attr',3,'p_Attr_g','compiler_yacc.py',460),
  ('Attr -> gid [ Exp ] = Exp','Attr',6,'p_Attr_arrg','compiler_yacc.py',467),
  ('Attr -> gid [ Exp ] [ Exp ] = Exp','Attr',9,'p_Attr_arr2Dg','compiler_yacc.py',478),
  ('Return -> return ( Exp )','Return',4,'p_Return','compiler_yacc.py',492),
  ('If -> if ( Cond ) { Insts }','If',7,'p_If','compiler_yacc.py',498),
  ('If -> if ( Cond ) Inst','If',5,'p_If_0','compiler_yacc.py',513),
  ('IfStart -> if ( Cond )','IfStart',4,'p_IfStart','compiler_yacc.py',528),
  ('If -> if ( Cond ) { Insts } else { Insts }','If',11,'p_If_Else','compiler_yacc.py',538),
  ('ElseStart -> else','ElseStart',1,'p_ElseStart','compiler_yacc.py',561),
  ('Exp -> Exp + Term','Exp',3,'p_Exp_add','compiler_yacc.py',574),
  ('Exp -> Exp - Term','Exp',3,'p_Exp_sub','compiler_yacc.py',578),
  ('Exp -> id addeq Term','Exp',3,'p_Exp_id_addeq','compiler_yacc.py',582),
  ('Exp -> id subeq Term','Exp',3,'p_Exp_id_subeq','compiler_yacc.py',590),
  ('Exp -> id addeql Term','Exp',3,'p_Exp_id_addeql','compiler_yacc.py',598),
  ('Exp -> id subeql Term','Exp',3,'p_Exp_id_subeql','compiler_yacc.py',606),
  ('Exp -> Term','Exp',1,'p_Exp_term','compiler_yacc.py',614),
  ('Term -> Term * Factor','Term',3,'p_Term_mul','compiler_yacc.py',618),
  ('Term -> Term / Factor','Term',3,'p_Term_div','compiler_yacc.py',622),
  ('Term -> Term % Factor','Term',3,'p_Term_mod','compiler_yacc.py',626),
  ('Term -> id muleq Factor','Term',3,'p_Term_id_muleq','compiler_yacc.py',630),
  ('Term -> id diveq Factor','Term',3,'p_Term_id_diveq','compiler_yacc.py',638),
  ('Term -> id modeq Factor','Term',3,'p_Term_id_modeq','compiler_yacc.py',646),
  ('Term -> id muleql Factor','Term',3,'p_Term_id_muleql','compiler_yacc.py',655),
  ('Term -> id diveql Factor','Term',3,'p_Term_id_diveql','compiler_yacc.py',663),
  ('Term -> id modeql Factor','Term',3,'p_Term_id_modeql','compiler_yacc.py',671),
  ('Term -> Factor','Term',1,'p_Term_factor','compiler_yacc.py',679),
  ('Factor -> id plus','Factor',2,'p_Factor_id_plus','compiler_yacc.py',683),
  ('Factor -> id plusl','Factor',2,'p_Factor_id_plusl','compiler_yacc.py',691),
  ('Factor -> id minus','Factor',2,'p_Factor_id_minus','compiler_yacc.py',699),
  ('Factor -> id minusl','Factor',2,'p_Factor_id_minusl','compiler_yacc.py',707),
  ('Factor -> id','Factor',1,'p_Factor_id','compiler_yacc.py',715),
  ('Factor -> gid','Factor',1,'p_Factor_gid','compiler_yacc.py',719),
  ('Factor -> num','Factor',1,'p_Factor_num','compiler_yacc.py',723),
  ('Factor -> id ( )','Factor',3,'p_Factor_call','compiler_yacc.py',727),
  ('Factor -> ( Cond )','Factor',3,'p_Factor_cond','compiler_yacc.py',733),
  ('Factor -> id [ Exp ]','Factor',4,'p_Factor_arr','compiler_yacc.py',738),
  ('Factor -> id [ Exp ] [ Exp ]','Factor',7,'p_Factor_arr_2d','compiler_yacc.py',745),
  ('Factor -> gid [ Exp ]','Factor',4,'p_Factor_arrg','compiler_yacc.py',754),
  ('Factor -> gid [ Exp ] [ Exp ]','Factor',7,'p_Factor_arrg_2d','compiler_yacc.py',761),
  ('Factor -> ( Exp )','Factor',3,'p_Factor_group','compiler_yacc.py',771),
  ('Id -> id','Id',1,'p_Id','compiler_yacc.py',776),
  ('Id -> id [ Exp ]','Id',4,'p_Id_arr','compiler_yacc.py',780),
  ('Id -> id [ Exp ] [ Exp ]','Id',7,'p_Id_arr_2d','compiler_yacc.py',787),
  ('Cond -> Cond and Cond','Cond',3,'p_Cond_and','compiler_yacc.py',796),
  ('Cond -> Cond or Cond','Cond',3,'p_Cond_or','compiler_yacc.py',800),
  ('Cond -> ( Cond and Cond )','Cond',5,'p_Cond_and_par','compiler_yacc.py',805),
  ('Cond -> ( Cond or Cond )','Cond',5,'p_Cond_or_par','compiler_yacc.py',809),
  ('Cond -> Exp sup Exp','Cond',3,'p_Cond_sup','compiler_yacc.py',814),
  ('Cond -> Exp inf Exp','Cond',3,'p_Cond_inf','compiler_yacc.py',818),
  ('Cond -> Exp supeq Exp','Cond',3,'p_Cond_supeq','compiler_yacc.py',822),
  ('Cond -> Exp infeq Exp','Cond',3,'p_Cond_infeq','compiler_yacc.py',826),
  ('Cond -> not Exp','Cond',2,'p_Cond_not','compiler_yacc.py',830),
  ('Cond -> Exp eq Exp','Cond',3,'p_Cond_eq','compiler_yacc.py',834),
  ('Cond -> Exp diff Exp','Cond',3,'p_Cond_diff','compiler_yacc.py',838),
]
