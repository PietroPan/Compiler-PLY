
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "num id int print println prints string vars main repeat read sup inf eq supeq infeq not diff and or if else for while plus addeq subeq diveq muleq addeql subeql diveql muleql minus plusl minusl modeq modeql return global gidProg :  GlobalBlc MainBlc DefBlcsDefBlcs : DefBlcs DefBlc DefBlcs : DefBlc : id '{' VarBlc Insts '}' VarBlc :  Dcls GlobalBlc : global '{' DclGs '}' GlobalBlc : DclGs : DclGs DclGlobalDclGs : Dcls : Dcls DclDcls : MainBlc : main '{' VarBlc Insts '}'Insts : Insts Inst Insts :Inst : AttrInst : ReturnInst : ExpInst : PrintInst : PrintlnInst : PrintsInst : RepeatInst : ForInst : WhileInst : ReadInst : IfRepeat : RepeatS '(' num ')' '{' Insts '}' RepeatS : repeatFor : for '(' Insts ';' Cond ';' Insts ')' '{' Insts '}'While : while '(' Cond ')' '{' Insts '}'Read : read '(' id ')'Print : print '(' Exp ')'Println : println '(' Exp ')'Prints : prints '(' string ')'Dcl : int id '[' num ']'Dcl : int id '[' num ']' '[' num ']'Dcl : int idDcl : int id '=' numDclGlobal : int id '[' num ']'DclGlobal : int id '[' num ']' '[' num ']'DclGlobal : int idDclGlobal : int id '=' numAttr : id '=' ExpAttr : id '[' Exp ']' '=' ExpAttr : id '[' Exp ']' '[' Exp ']' '=' ExpAttr : gid '=' ExpAttr : gid '[' Exp ']' '=' ExpAttr : gid '[' Exp ']' '[' Exp ']' '=' ExpReturn : return '(' Exp ')'If : if '(' Cond ')' '{' Insts '}' If : if '(' Cond ')' Inst IfStart : if '(' Cond ')'If : if '(' Cond ')' '{' Insts '}' else '{' Insts '}'ElseStart : else Exp : Exp '+' TermExp : Exp '-' TermExp : id addeq TermExp : id subeq TermExp : id addeql TermExp : id subeql TermExp : TermTerm : Term '*' FactorTerm : Term '/' FactorTerm : Term '%' FactorTerm : id muleq FactorTerm : id diveq FactorTerm : id modeq FactorTerm : id muleql FactorTerm : id diveql FactorTerm : id modeql FactorTerm : FactorFactor : id plusFactor : id pluslFactor : id minusFactor : id minuslFactor : idFactor : gidFactor : numFactor : id '(' ')' Factor : '(' Cond ')'Factor : id '[' Exp ']'Factor : id '[' Exp ']' '[' Exp ']'Factor : gid '[' Exp ']'Factor : gid '[' Exp ']' '[' Exp ']'Factor : '(' Exp ')'Id : idId : id '[' Exp ']'Id : id '[' Exp ']' '[' Exp ']'Cond : Cond and CondCond : Cond or CondCond : '(' Cond and Cond ')'Cond : '(' Cond or Cond ')' Cond : Exp sup ExpCond : Exp inf ExpCond : Exp supeq ExpCond : Exp infeq ExpCond : not ExpCond : Exp eq ExpCond : Exp diff Exp"
    
_lr_action_items = {'global':([0,],[3,]),'main':([0,2,14,],[-7,5,-6,]),'$end':([1,4,7,10,23,99,],[0,-3,-1,-2,-12,-4,]),'{':([3,5,11,167,169,171,216,217,],[6,8,17,182,184,185,220,221,]),'id':([4,7,8,10,12,13,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,45,50,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,81,82,83,84,85,86,87,88,91,92,93,94,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,141,147,149,150,151,152,153,164,165,166,168,170,171,172,174,175,176,177,180,181,182,184,185,186,190,192,195,196,197,198,199,200,203,204,207,208,209,210,211,212,213,214,215,218,219,220,221,222,223,224,225,],[-3,11,-11,-2,-14,-5,21,-11,36,-10,52,-14,-12,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,82,-60,-77,-70,-36,36,101,101,82,82,101,101,101,101,109,109,109,109,109,109,-71,-72,-73,-74,82,82,82,82,82,-75,-76,109,109,109,82,82,-14,82,144,82,-4,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,82,82,-84,82,82,82,82,82,82,82,82,-61,-62,-63,36,-37,-80,-82,-48,82,82,-31,-32,-33,82,-30,36,-34,82,82,82,82,-80,-82,-14,-14,-14,-50,-43,-46,82,82,36,-14,36,36,-81,-83,-26,36,-29,-49,-35,82,82,-81,-83,-44,-47,-14,-14,36,36,-28,-52,]),'}':([6,8,9,12,13,15,17,18,19,21,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,98,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,134,135,136,147,148,149,150,151,164,165,166,170,172,180,181,182,184,185,186,190,192,197,199,200,202,203,204,207,209,210,211,214,215,218,219,220,221,222,223,224,225,],[-9,-11,14,-14,-5,-8,-11,23,-10,-40,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-36,99,-71,-72,-73,-74,-75,-76,-41,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-61,-62,-63,-37,-38,-80,-82,-48,-31,-32,-33,-30,-34,-80,-82,-14,-14,-14,-50,-43,-46,207,209,210,-39,-81,-83,-26,-29,-49,-35,-81,-83,-44,-47,-14,-14,224,225,-28,-52,]),'int':([6,8,9,13,15,17,19,21,52,98,147,148,172,202,211,],[-9,-11,16,20,-8,-11,-10,-40,-36,-41,-37,-38,-34,-39,-35,]),'gid':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,45,50,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,81,82,83,84,85,86,87,88,91,92,94,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,141,147,149,150,151,152,153,164,165,166,168,170,171,172,174,175,176,177,180,181,182,184,185,186,190,192,195,196,197,198,199,200,203,204,207,208,209,210,211,212,213,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,37,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,83,-60,-77,-70,-36,37,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-71,-72,-73,-74,83,83,83,83,83,-75,-76,83,83,83,83,83,-14,83,83,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,83,83,-84,83,83,83,83,83,83,83,83,-61,-62,-63,37,-37,-80,-82,-48,83,83,-31,-32,-33,83,-30,37,-34,83,83,83,83,-80,-82,-14,-14,-14,-50,-43,-46,83,83,37,-14,37,37,-81,-83,-26,37,-29,-49,-35,83,83,-81,-83,-44,-47,-14,-14,37,37,-28,-52,]),'return':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,91,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,134,135,136,141,147,149,150,151,164,165,166,170,171,172,180,181,182,184,185,186,190,192,197,198,199,200,203,204,207,208,209,210,211,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,38,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-36,38,-71,-72,-73,-74,-75,-76,-14,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-61,-62,-63,38,-37,-80,-82,-48,-31,-32,-33,-30,38,-34,-80,-82,-14,-14,-14,-50,-43,-46,38,-14,38,38,-81,-83,-26,38,-29,-49,-35,-81,-83,-44,-47,-14,-14,38,38,-28,-52,]),'print':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,91,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,134,135,136,141,147,149,150,151,164,165,166,170,171,172,180,181,182,184,185,186,190,192,197,198,199,200,203,204,207,208,209,210,211,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,41,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-36,41,-71,-72,-73,-74,-75,-76,-14,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-61,-62,-63,41,-37,-80,-82,-48,-31,-32,-33,-30,41,-34,-80,-82,-14,-14,-14,-50,-43,-46,41,-14,41,41,-81,-83,-26,41,-29,-49,-35,-81,-83,-44,-47,-14,-14,41,41,-28,-52,]),'println':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,91,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,134,135,136,141,147,149,150,151,164,165,166,170,171,172,180,181,182,184,185,186,190,192,197,198,199,200,203,204,207,208,209,210,211,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,42,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-36,42,-71,-72,-73,-74,-75,-76,-14,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-61,-62,-63,42,-37,-80,-82,-48,-31,-32,-33,-30,42,-34,-80,-82,-14,-14,-14,-50,-43,-46,42,-14,42,42,-81,-83,-26,42,-29,-49,-35,-81,-83,-44,-47,-14,-14,42,42,-28,-52,]),'prints':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,91,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,134,135,136,141,147,149,150,151,164,165,166,170,171,172,180,181,182,184,185,186,190,192,197,198,199,200,203,204,207,208,209,210,211,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,43,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-36,43,-71,-72,-73,-74,-75,-76,-14,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-61,-62,-63,43,-37,-80,-82,-48,-31,-32,-33,-30,43,-34,-80,-82,-14,-14,-14,-50,-43,-46,43,-14,43,43,-81,-83,-26,43,-29,-49,-35,-81,-83,-44,-47,-14,-14,43,43,-28,-52,]),'for':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,91,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,134,135,136,141,147,149,150,151,164,165,166,170,171,172,180,181,182,184,185,186,190,192,197,198,199,200,203,204,207,208,209,210,211,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,46,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-36,46,-71,-72,-73,-74,-75,-76,-14,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-61,-62,-63,46,-37,-80,-82,-48,-31,-32,-33,-30,46,-34,-80,-82,-14,-14,-14,-50,-43,-46,46,-14,46,46,-81,-83,-26,46,-29,-49,-35,-81,-83,-44,-47,-14,-14,46,46,-28,-52,]),'while':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,91,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,134,135,136,141,147,149,150,151,164,165,166,170,171,172,180,181,182,184,185,186,190,192,197,198,199,200,203,204,207,208,209,210,211,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,47,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-36,47,-71,-72,-73,-74,-75,-76,-14,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-61,-62,-63,47,-37,-80,-82,-48,-31,-32,-33,-30,47,-34,-80,-82,-14,-14,-14,-50,-43,-46,47,-14,47,47,-81,-83,-26,47,-29,-49,-35,-81,-83,-44,-47,-14,-14,47,47,-28,-52,]),'read':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,91,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,134,135,136,141,147,149,150,151,164,165,166,170,171,172,180,181,182,184,185,186,190,192,197,198,199,200,203,204,207,208,209,210,211,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,48,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-36,48,-71,-72,-73,-74,-75,-76,-14,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-61,-62,-63,48,-37,-80,-82,-48,-31,-32,-33,-30,48,-34,-80,-82,-14,-14,-14,-50,-43,-46,48,-14,48,48,-81,-83,-26,48,-29,-49,-35,-81,-83,-44,-47,-14,-14,48,48,-28,-52,]),'if':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,91,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,134,135,136,141,147,149,150,151,164,165,166,170,171,172,180,181,182,184,185,186,190,192,197,198,199,200,203,204,207,208,209,210,211,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,49,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-36,49,-71,-72,-73,-74,-75,-76,-14,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-61,-62,-63,49,-37,-80,-82,-48,-31,-32,-33,-30,49,-34,-80,-82,-14,-14,-14,-50,-43,-46,49,-14,49,49,-81,-83,-26,49,-29,-49,-35,-81,-83,-44,-47,-14,-14,49,49,-28,-52,]),'repeat':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,52,55,70,71,72,73,82,83,91,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,134,135,136,141,147,149,150,151,164,165,166,170,171,172,180,181,182,184,185,186,190,192,197,198,199,200,203,204,207,208,209,210,211,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,51,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-36,51,-71,-72,-73,-74,-75,-76,-14,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-61,-62,-63,51,-37,-80,-82,-48,-31,-32,-33,-30,51,-34,-80,-82,-14,-14,-14,-50,-43,-46,51,-14,51,51,-81,-83,-26,51,-29,-49,-35,-81,-83,-44,-47,-14,-14,51,51,-28,-52,]),'num':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,39,40,45,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,81,82,83,84,85,86,87,88,90,91,92,94,95,96,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,141,147,149,150,151,152,153,164,165,166,168,170,171,172,173,174,175,176,177,180,181,182,184,185,186,187,190,192,195,196,197,198,199,200,203,204,207,208,209,210,211,212,213,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,45,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,45,-60,-77,-70,-36,97,98,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-71,-72,-73,-74,45,45,45,45,45,-75,-76,45,45,45,45,45,140,-14,45,45,146,147,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,45,45,-84,45,45,45,45,45,45,45,45,-61,-62,-63,45,-37,-80,-82,-48,45,45,-31,-32,-33,45,-30,45,-34,188,45,45,45,45,-80,-82,-14,-14,-14,-50,201,-43,-46,45,45,45,-14,45,45,-81,-83,-26,45,-29,-49,-35,45,45,-81,-83,-44,-47,-14,-14,45,45,-28,-52,]),'(':([8,12,13,17,18,19,22,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,81,82,83,84,85,86,87,88,91,92,94,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,141,147,149,150,151,152,153,164,165,166,168,170,171,172,174,175,176,177,180,181,182,184,185,186,190,192,195,196,197,198,199,200,203,204,207,208,209,210,211,212,213,214,215,218,219,220,221,222,223,224,225,],[-11,-14,-5,-11,39,-10,-14,-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,74,-76,77,78,-60,87,88,89,90,-77,91,92,93,94,-70,-27,-36,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-71,-72,-73,-74,39,39,39,78,39,74,-76,39,39,39,39,39,-14,78,78,-54,74,-55,-42,-56,-57,-58,-59,74,-64,-65,-66,-67,-68,-69,-78,-45,-79,78,78,-84,39,39,39,39,39,39,39,39,-61,-62,-63,39,-37,-80,-82,-48,78,78,-31,-32,-33,78,-30,39,-34,39,39,39,39,-80,-82,-14,-14,-14,-50,-43,-46,39,39,39,-14,39,39,-81,-83,-26,39,-29,-49,-35,39,39,-81,-83,-44,-47,-14,-14,39,39,-28,-52,]),'[':([21,36,37,52,82,83,101,109,148,149,150,172,180,181,],[53,59,76,95,132,133,132,132,173,174,176,187,195,196,]),'=':([21,36,37,52,149,150,203,204,],[54,58,75,96,175,177,212,213,]),';':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,70,71,72,73,82,83,91,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,131,134,135,136,141,149,150,151,154,155,156,157,158,159,160,161,164,165,166,170,180,181,183,186,190,192,193,194,203,204,207,209,210,214,215,218,219,224,225,],[-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-71,-72,-73,-74,-75,-76,-14,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,-79,-84,-96,-61,-62,-63,168,-80,-82,-48,-88,-89,-92,-93,-94,-95,-97,-98,-31,-32,-33,-30,-80,-82,198,-50,-43,-46,-90,-91,-81,-83,-26,-29,-49,-81,-83,-44,-47,-28,-52,]),')':([24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,45,50,70,71,72,73,74,79,80,82,83,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,124,131,134,135,136,137,138,139,140,142,144,145,149,150,151,154,155,156,157,158,159,160,161,164,165,166,170,178,179,180,181,186,190,192,193,194,198,203,204,207,208,209,210,214,215,218,219,224,225,],[-13,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-75,-76,-60,-77,-70,-71,-72,-73,-74,116,121,124,-75,-76,-54,-75,-55,-42,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-45,151,121,-79,-84,-96,-61,-62,-63,164,165,166,167,169,170,171,-80,-82,-48,-88,-89,-92,-93,-94,-95,-97,-98,-31,-32,-33,-30,193,194,-80,-82,-50,-43,-46,-90,-91,-14,-81,-83,-26,216,-29,-49,-81,-83,-44,-47,-28,-52,]),'+':([27,36,37,40,45,50,70,71,72,73,80,82,83,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,124,131,134,135,136,137,138,143,149,150,156,157,158,159,160,161,162,163,180,181,189,190,191,192,203,204,205,206,214,215,218,219,],[56,-75,-76,-60,-77,-70,-71,-72,-73,-74,56,-75,-76,-54,-75,-55,56,56,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,56,56,56,-79,-84,56,-61,-62,-63,56,56,56,-80,-82,56,56,56,56,56,56,56,56,-80,-82,56,56,56,56,-81,-83,56,56,-81,-83,56,56,]),'-':([27,36,37,40,45,50,70,71,72,73,80,82,83,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,124,131,134,135,136,137,138,143,149,150,156,157,158,159,160,161,162,163,180,181,189,190,191,192,203,204,205,206,214,215,218,219,],[57,-75,-76,-60,-77,-70,-71,-72,-73,-74,57,-75,-76,-54,-75,-55,57,57,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,57,57,57,-79,-84,57,-61,-62,-63,57,57,57,-80,-82,57,57,57,57,57,57,57,57,-80,-82,57,57,57,57,-81,-83,57,57,-81,-83,57,57,]),'addeq':([36,82,],[60,60,]),'subeq':([36,82,],[61,61,]),'addeql':([36,82,],[62,62,]),'subeql':([36,82,],[63,63,]),'muleq':([36,82,101,],[64,64,64,]),'diveq':([36,82,101,],[65,65,65,]),'modeq':([36,82,101,],[66,66,66,]),'muleql':([36,82,101,],[67,67,67,]),'diveql':([36,82,101,],[68,68,68,]),'modeql':([36,82,101,],[69,69,69,]),'plus':([36,82,101,109,],[70,70,70,70,]),'plusl':([36,82,101,109,],[71,71,71,71,]),'minus':([36,82,101,109,],[72,72,72,72,]),'minusl':([36,82,101,109,],[73,73,73,73,]),'*':([36,37,40,45,50,70,71,72,73,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,121,124,134,135,136,149,150,180,181,203,204,214,215,],[-75,-76,84,-77,-70,-71,-72,-73,-74,-75,-76,84,-75,84,84,84,84,84,-75,-64,-65,-66,-67,-68,-69,-78,-79,-84,-61,-62,-63,-80,-82,-80,-82,-81,-83,-81,-83,]),'/':([36,37,40,45,50,70,71,72,73,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,121,124,134,135,136,149,150,180,181,203,204,214,215,],[-75,-76,85,-77,-70,-71,-72,-73,-74,-75,-76,85,-75,85,85,85,85,85,-75,-64,-65,-66,-67,-68,-69,-78,-79,-84,-61,-62,-63,-80,-82,-80,-82,-81,-83,-81,-83,]),'%':([36,37,40,45,50,70,71,72,73,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,121,124,134,135,136,149,150,180,181,203,204,214,215,],[-75,-76,86,-77,-70,-71,-72,-73,-74,-75,-76,86,-75,86,86,86,86,86,-75,-64,-65,-66,-67,-68,-69,-78,-79,-84,-61,-62,-63,-80,-82,-80,-82,-81,-83,-81,-83,]),'not':([39,78,92,94,122,123,152,153,168,],[81,81,81,81,81,81,81,81,81,]),'sup':([40,45,50,70,71,72,73,80,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,121,124,134,135,136,143,180,181,214,215,],[-60,-77,-70,-71,-72,-73,-74,125,-75,-76,-54,-75,-55,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-79,-84,-61,-62,-63,125,-80,-82,-81,-83,]),'inf':([40,45,50,70,71,72,73,80,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,121,124,134,135,136,143,180,181,214,215,],[-60,-77,-70,-71,-72,-73,-74,126,-75,-76,-54,-75,-55,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-79,-84,-61,-62,-63,126,-80,-82,-81,-83,]),'supeq':([40,45,50,70,71,72,73,80,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,121,124,134,135,136,143,180,181,214,215,],[-60,-77,-70,-71,-72,-73,-74,127,-75,-76,-54,-75,-55,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-79,-84,-61,-62,-63,127,-80,-82,-81,-83,]),'infeq':([40,45,50,70,71,72,73,80,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,121,124,134,135,136,143,180,181,214,215,],[-60,-77,-70,-71,-72,-73,-74,128,-75,-76,-54,-75,-55,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-79,-84,-61,-62,-63,128,-80,-82,-81,-83,]),'eq':([40,45,50,70,71,72,73,80,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,121,124,134,135,136,143,180,181,214,215,],[-60,-77,-70,-71,-72,-73,-74,129,-75,-76,-54,-75,-55,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-79,-84,-61,-62,-63,129,-80,-82,-81,-83,]),'diff':([40,45,50,70,71,72,73,80,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,121,124,134,135,136,143,180,181,214,215,],[-60,-77,-70,-71,-72,-73,-74,130,-75,-76,-54,-75,-55,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,-79,-84,-61,-62,-63,130,-80,-82,-81,-83,]),']':([40,45,50,70,71,72,73,82,83,97,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,118,121,124,134,135,136,146,162,163,180,181,188,189,191,201,205,206,214,215,],[-60,-77,-70,-71,-72,-73,-74,-75,-76,148,-54,-75,-55,149,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,150,-79,-84,-61,-62,-63,172,180,181,-80,-82,202,203,204,211,214,215,-81,-83,]),'and':([40,45,50,70,71,72,73,79,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,120,121,124,131,134,135,136,142,145,154,155,156,157,158,159,160,161,178,179,180,181,183,193,194,214,215,],[-60,-77,-70,-71,-72,-73,-74,122,-75,-76,-54,-75,-55,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,152,-79,-84,-96,-61,-62,-63,122,122,122,122,-92,-93,-94,-95,-97,-98,122,122,-80,-82,122,-90,-91,-81,-83,]),'or':([40,45,50,70,71,72,73,79,82,83,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,120,121,124,131,134,135,136,142,145,154,155,156,157,158,159,160,161,178,179,180,181,183,193,194,214,215,],[-60,-77,-70,-71,-72,-73,-74,123,-75,-76,-54,-75,-55,-56,-57,-58,-59,-75,-64,-65,-66,-67,-68,-69,-78,153,-79,-84,-96,-61,-62,-63,123,123,123,123,-92,-93,-94,-95,-97,-98,123,123,-80,-82,123,-90,-91,-81,-83,]),'string':([89,],[139,]),'else':([210,],[217,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Prog':([0,],[1,]),'GlobalBlc':([0,],[2,]),'MainBlc':([2,],[4,]),'DefBlcs':([4,],[7,]),'DclGs':([6,],[9,]),'DefBlc':([7,],[10,]),'VarBlc':([8,17,],[12,22,]),'Dcls':([8,17,],[13,13,]),'DclGlobal':([9,],[15,]),'Insts':([12,22,91,182,184,185,198,220,221,],[18,55,141,197,199,200,208,222,223,]),'Dcl':([13,],[19,]),'Inst':([18,55,141,171,197,199,200,208,222,223,],[24,24,24,186,24,24,24,24,24,24,]),'Attr':([18,55,141,171,197,199,200,208,222,223,],[25,25,25,25,25,25,25,25,25,25,]),'Return':([18,55,141,171,197,199,200,208,222,223,],[26,26,26,26,26,26,26,26,26,26,]),'Exp':([18,39,55,58,59,75,76,77,78,81,87,88,92,94,122,123,125,126,127,128,129,130,132,133,141,152,153,168,171,174,175,176,177,195,196,197,199,200,208,212,213,222,223,],[27,80,27,103,104,117,118,119,80,131,137,138,143,143,143,143,156,157,158,159,160,161,162,163,27,143,143,143,27,189,190,191,192,205,206,27,27,27,27,218,219,27,27,]),'Print':([18,55,141,171,197,199,200,208,222,223,],[28,28,28,28,28,28,28,28,28,28,]),'Println':([18,55,141,171,197,199,200,208,222,223,],[29,29,29,29,29,29,29,29,29,29,]),'Prints':([18,55,141,171,197,199,200,208,222,223,],[30,30,30,30,30,30,30,30,30,30,]),'Repeat':([18,55,141,171,197,199,200,208,222,223,],[31,31,31,31,31,31,31,31,31,31,]),'For':([18,55,141,171,197,199,200,208,222,223,],[32,32,32,32,32,32,32,32,32,32,]),'While':([18,55,141,171,197,199,200,208,222,223,],[33,33,33,33,33,33,33,33,33,33,]),'Read':([18,55,141,171,197,199,200,208,222,223,],[34,34,34,34,34,34,34,34,34,34,]),'If':([18,55,141,171,197,199,200,208,222,223,],[35,35,35,35,35,35,35,35,35,35,]),'Term':([18,39,55,56,57,58,59,60,61,62,63,75,76,77,78,81,87,88,92,94,122,123,125,126,127,128,129,130,132,133,141,152,153,168,171,174,175,176,177,195,196,197,199,200,208,212,213,222,223,],[40,40,40,100,102,40,40,105,106,107,108,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'RepeatS':([18,55,141,171,197,199,200,208,222,223,],[44,44,44,44,44,44,44,44,44,44,]),'Factor':([18,39,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,81,84,85,86,87,88,92,94,122,123,125,126,127,128,129,130,132,133,141,152,153,168,171,174,175,176,177,195,196,197,199,200,208,212,213,222,223,],[50,50,50,50,50,50,50,50,50,50,50,110,111,112,113,114,115,50,50,50,50,50,134,135,136,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'Cond':([39,78,92,94,122,123,152,153,168,],[79,120,142,145,154,155,178,179,183,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Prog","S'",1,None,None,None),
  ('Prog -> GlobalBlc MainBlc DefBlcs','Prog',3,'p_Prog','compiler_yacc.py',108),
  ('DefBlcs -> DefBlcs DefBlc','DefBlcs',2,'p_DefBlcs','compiler_yacc.py',112),
  ('DefBlcs -> <empty>','DefBlcs',0,'p_Def_End','compiler_yacc.py',116),
  ('DefBlc -> id { VarBlc Insts }','DefBlc',5,'p_DefBlc','compiler_yacc.py',120),
  ('VarBlc -> Dcls','VarBlc',1,'p_VarBlc','compiler_yacc.py',131),
  ('GlobalBlc -> global { DclGs }','GlobalBlc',4,'p_GlobalBlc','compiler_yacc.py',140),
  ('GlobalBlc -> <empty>','GlobalBlc',0,'p_GlobalBlc_Null','compiler_yacc.py',144),
  ('DclGs -> DclGs DclGlobal','DclGs',2,'p_DclGs','compiler_yacc.py',148),
  ('DclGs -> <empty>','DclGs',0,'p_DclGs_End','compiler_yacc.py',153),
  ('Dcls -> Dcls Dcl','Dcls',2,'p_Dcls','compiler_yacc.py',157),
  ('Dcls -> <empty>','Dcls',0,'p_Dcls_End','compiler_yacc.py',162),
  ('MainBlc -> main { VarBlc Insts }','MainBlc',5,'p_MainBlc','compiler_yacc.py',166),
  ('Insts -> Insts Inst','Insts',2,'p_Insts','compiler_yacc.py',177),
  ('Insts -> <empty>','Insts',0,'p_Insts_End','compiler_yacc.py',181),
  ('Inst -> Attr','Inst',1,'p_Inst_Attr','compiler_yacc.py',185),
  ('Inst -> Return','Inst',1,'p_Inst_Return','compiler_yacc.py',190),
  ('Inst -> Exp','Inst',1,'p_Inst_Exp','compiler_yacc.py',194),
  ('Inst -> Print','Inst',1,'p_Inst_Print','compiler_yacc.py',198),
  ('Inst -> Println','Inst',1,'p_Inst_Println','compiler_yacc.py',203),
  ('Inst -> Prints','Inst',1,'p_Inst_Prints','compiler_yacc.py',208),
  ('Inst -> Repeat','Inst',1,'p_Inst_Repeat','compiler_yacc.py',214),
  ('Inst -> For','Inst',1,'p_Inst_For','compiler_yacc.py',219),
  ('Inst -> While','Inst',1,'p_Inst_While','compiler_yacc.py',223),
  ('Inst -> Read','Inst',1,'p_Inst_Read','compiler_yacc.py',227),
  ('Inst -> If','Inst',1,'p_Inst_If','compiler_yacc.py',232),
  ('Repeat -> RepeatS ( num ) { Insts }','Repeat',7,'p_Repeat','compiler_yacc.py',239),
  ('RepeatS -> repeat','RepeatS',1,'p_RepeatS','compiler_yacc.py',280),
  ('For -> for ( Insts ; Cond ; Insts ) { Insts }','For',11,'p_For','compiler_yacc.py',294),
  ('While -> while ( Cond ) { Insts }','While',7,'p_While','compiler_yacc.py',305),
  ('Read -> read ( id )','Read',4,'p_Read','compiler_yacc.py',316),
  ('Print -> print ( Exp )','Print',4,'p_Print','compiler_yacc.py',324),
  ('Println -> println ( Exp )','Println',4,'p_Println','compiler_yacc.py',331),
  ('Prints -> prints ( string )','Prints',4,'p_Prints','compiler_yacc.py',343),
  ('Dcl -> int id [ num ]','Dcl',5,'p_Dcl_Arr','compiler_yacc.py',350),
  ('Dcl -> int id [ num ] [ num ]','Dcl',8,'p_Dcl_Arr_2D','compiler_yacc.py',357),
  ('Dcl -> int id','Dcl',2,'p_Dcl_0','compiler_yacc.py',364),
  ('Dcl -> int id = num','Dcl',4,'p_Dcl_num','compiler_yacc.py',371),
  ('DclGlobal -> int id [ num ]','DclGlobal',5,'p_DclGlobal_Arr','compiler_yacc.py',379),
  ('DclGlobal -> int id [ num ] [ num ]','DclGlobal',8,'p_DclGlobal_Arr_2D','compiler_yacc.py',386),
  ('DclGlobal -> int id','DclGlobal',2,'p_DclGlobal_0','compiler_yacc.py',393),
  ('DclGlobal -> int id = num','DclGlobal',4,'p_DclGlobal_num','compiler_yacc.py',400),
  ('Attr -> id = Exp','Attr',3,'p_Attr','compiler_yacc.py',407),
  ('Attr -> id [ Exp ] = Exp','Attr',6,'p_Attr_arr','compiler_yacc.py',416),
  ('Attr -> id [ Exp ] [ Exp ] = Exp','Attr',9,'p_Attr_arr2D','compiler_yacc.py',433),
  ('Attr -> gid = Exp','Attr',3,'p_Attr_g','compiler_yacc.py',457),
  ('Attr -> gid [ Exp ] = Exp','Attr',6,'p_Attr_arrg','compiler_yacc.py',464),
  ('Attr -> gid [ Exp ] [ Exp ] = Exp','Attr',9,'p_Attr_arr2Dg','compiler_yacc.py',475),
  ('Return -> return ( Exp )','Return',4,'p_Return','compiler_yacc.py',489),
  ('If -> if ( Cond ) { Insts }','If',7,'p_If','compiler_yacc.py',495),
  ('If -> if ( Cond ) Inst','If',5,'p_If_0','compiler_yacc.py',510),
  ('IfStart -> if ( Cond )','IfStart',4,'p_IfStart','compiler_yacc.py',525),
  ('If -> if ( Cond ) { Insts } else { Insts }','If',11,'p_If_Else','compiler_yacc.py',535),
  ('ElseStart -> else','ElseStart',1,'p_ElseStart','compiler_yacc.py',558),
  ('Exp -> Exp + Term','Exp',3,'p_Exp_add','compiler_yacc.py',571),
  ('Exp -> Exp - Term','Exp',3,'p_Exp_sub','compiler_yacc.py',575),
  ('Exp -> id addeq Term','Exp',3,'p_Exp_id_addeq','compiler_yacc.py',579),
  ('Exp -> id subeq Term','Exp',3,'p_Exp_id_subeq','compiler_yacc.py',587),
  ('Exp -> id addeql Term','Exp',3,'p_Exp_id_addeql','compiler_yacc.py',595),
  ('Exp -> id subeql Term','Exp',3,'p_Exp_id_subeql','compiler_yacc.py',603),
  ('Exp -> Term','Exp',1,'p_Exp_term','compiler_yacc.py',611),
  ('Term -> Term * Factor','Term',3,'p_Term_mul','compiler_yacc.py',615),
  ('Term -> Term / Factor','Term',3,'p_Term_div','compiler_yacc.py',619),
  ('Term -> Term % Factor','Term',3,'p_Term_mod','compiler_yacc.py',623),
  ('Term -> id muleq Factor','Term',3,'p_Term_id_muleq','compiler_yacc.py',627),
  ('Term -> id diveq Factor','Term',3,'p_Term_id_diveq','compiler_yacc.py',635),
  ('Term -> id modeq Factor','Term',3,'p_Term_id_modeq','compiler_yacc.py',643),
  ('Term -> id muleql Factor','Term',3,'p_Term_id_muleql','compiler_yacc.py',652),
  ('Term -> id diveql Factor','Term',3,'p_Term_id_diveql','compiler_yacc.py',660),
  ('Term -> id modeql Factor','Term',3,'p_Term_id_modeql','compiler_yacc.py',668),
  ('Term -> Factor','Term',1,'p_Term_factor','compiler_yacc.py',676),
  ('Factor -> id plus','Factor',2,'p_Factor_id_plus','compiler_yacc.py',680),
  ('Factor -> id plusl','Factor',2,'p_Factor_id_plusl','compiler_yacc.py',688),
  ('Factor -> id minus','Factor',2,'p_Factor_id_minus','compiler_yacc.py',696),
  ('Factor -> id minusl','Factor',2,'p_Factor_id_minusl','compiler_yacc.py',704),
  ('Factor -> id','Factor',1,'p_Factor_id','compiler_yacc.py',712),
  ('Factor -> gid','Factor',1,'p_Factor_gid','compiler_yacc.py',716),
  ('Factor -> num','Factor',1,'p_Factor_num','compiler_yacc.py',720),
  ('Factor -> id ( )','Factor',3,'p_Factor_call','compiler_yacc.py',724),
  ('Factor -> ( Cond )','Factor',3,'p_Factor_cond','compiler_yacc.py',730),
  ('Factor -> id [ Exp ]','Factor',4,'p_Factor_arr','compiler_yacc.py',735),
  ('Factor -> id [ Exp ] [ Exp ]','Factor',7,'p_Factor_arr_2d','compiler_yacc.py',742),
  ('Factor -> gid [ Exp ]','Factor',4,'p_Factor_arrg','compiler_yacc.py',751),
  ('Factor -> gid [ Exp ] [ Exp ]','Factor',7,'p_Factor_arrg_2d','compiler_yacc.py',758),
  ('Factor -> ( Exp )','Factor',3,'p_Factor_group','compiler_yacc.py',768),
  ('Id -> id','Id',1,'p_Id','compiler_yacc.py',773),
  ('Id -> id [ Exp ]','Id',4,'p_Id_arr','compiler_yacc.py',777),
  ('Id -> id [ Exp ] [ Exp ]','Id',7,'p_Id_arr_2d','compiler_yacc.py',784),
  ('Cond -> Cond and Cond','Cond',3,'p_Cond_and','compiler_yacc.py',793),
  ('Cond -> Cond or Cond','Cond',3,'p_Cond_or','compiler_yacc.py',797),
  ('Cond -> ( Cond and Cond )','Cond',5,'p_Cond_and_par','compiler_yacc.py',802),
  ('Cond -> ( Cond or Cond )','Cond',5,'p_Cond_or_par','compiler_yacc.py',806),
  ('Cond -> Exp sup Exp','Cond',3,'p_Cond_sup','compiler_yacc.py',811),
  ('Cond -> Exp inf Exp','Cond',3,'p_Cond_inf','compiler_yacc.py',815),
  ('Cond -> Exp supeq Exp','Cond',3,'p_Cond_supeq','compiler_yacc.py',819),
  ('Cond -> Exp infeq Exp','Cond',3,'p_Cond_infeq','compiler_yacc.py',823),
  ('Cond -> not Exp','Cond',2,'p_Cond_not','compiler_yacc.py',827),
  ('Cond -> Exp eq Exp','Cond',3,'p_Cond_eq','compiler_yacc.py',831),
  ('Cond -> Exp diff Exp','Cond',3,'p_Cond_diff','compiler_yacc.py',835),
]
