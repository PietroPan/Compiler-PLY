
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "num id int print println prints string vars main repeat read sup inf eq supeq infeq not diff and or if else for while plus addeq subeq diveq muleq addeql subeql diveql muleql minus plusl minusl modeq modeqlProg : VarBlc MainBlcVarBlc : vars '{' Dcls '}'Dcls : Dcls DclDcls : MainBlc : main '{' Insts '}'Insts : Insts Inst Insts :Inst : AttrInst : ExpInst : PrintInst : PrintlnInst : PrintsInst : RepeatInst : ForInst : WhileInst : ReadInst : IfRepeat : RepeatS '(' num ')' '{' Insts '}' RepeatS : repeatFor : for '(' Insts ';' Cond ';' Insts ')' '{' Insts '}'While : while '(' Cond ')' '{' Insts '}'Read : read '(' id ')'Print : print '(' Exp ')'Println : println '(' Exp ')'Prints : prints '(' string ')'Dcl : int id '[' num ']'Dcl : int id '[' num ']' '[' num ']'Dcl : int idDcl : int id '=' numAttr : id '=' ExpAttr : id '[' Exp ']' '=' ExpAttr : id '[' Exp ']' '[' Exp ']' '=' ExpIf : if '(' Cond ')' '{' Insts '}' If : if '(' Cond ')' Inst IfStart : if '(' Cond ')'If : if '(' Cond ')' '{' Insts '}' else '{' Insts '}'ElseStart : else Exp : Exp '+' TermExp : Exp '-' TermExp : id addeq TermExp : id subeq TermExp : id addeql TermExp : id subeql TermExp : TermTerm : Term '*' FactorTerm : Term '/' FactorTerm : Term '%' FactorTerm : id muleq FactorTerm : id diveq FactorTerm : id modeq FactorTerm : id muleql FactorTerm : id diveql FactorTerm : id modeql FactorTerm : FactorFactor : id plusFactor : id pluslFactor : id minusFactor : id minuslFactor : idFactor : numFactor : '(' Cond ')'Factor : '(' Exp ')'Id : idId : id '[' Exp ']'Id : id '[' Exp ']' '[' Exp ']'Cond : Cond and CondCond : Cond or CondCond : '(' Cond and Cond ')'Cond : '(' Cond or Cond ')' Cond : Exp sup ExpCond : Exp inf ExpCond : Exp supeq ExpCond : Exp infeq ExpCond : not ExpCond : Exp eq ExpCond : Exp diff Exp"
    
_lr_action_items = {'vars':([0,],[3,]),'$end':([1,4,13,],[0,-1,-5,]),'main':([2,10,],[5,-2,]),'{':([3,5,132,134,136,164,165,],[6,7,142,144,145,167,168,]),'}':([6,7,8,9,11,14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,39,54,55,56,57,66,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,117,119,130,131,135,137,142,144,145,146,149,152,154,155,158,160,161,162,166,167,168,169,170,171,172,],[-4,-7,10,13,-3,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-28,-55,-56,-57,-58,-59,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,-29,-23,-24,-25,-22,-26,-7,-7,-7,-34,-31,158,160,161,-18,-21,-33,-27,-32,-7,-7,171,172,-20,-36,]),'int':([6,8,11,39,117,137,162,],[-4,12,-3,-28,-29,-26,-27,]),'id':([7,9,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,70,71,72,73,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,101,102,103,104,105,106,111,119,120,121,130,131,133,135,136,138,139,142,144,145,146,149,152,153,154,155,158,159,160,161,163,166,167,168,169,170,171,172,],[-7,25,39,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,66,-60,-54,77,77,66,66,77,77,77,77,85,85,85,85,85,85,-55,-56,-57,-58,85,85,85,66,66,66,-59,66,-7,66,114,66,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,66,66,-62,66,66,66,66,66,66,25,-23,66,66,-24,-25,66,-22,25,66,66,-7,-7,-7,-34,-31,25,-7,25,25,-18,25,-21,-33,66,-32,-7,-7,25,25,-20,-36,]),'print':([7,9,14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,54,55,56,57,66,70,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,111,119,130,131,135,136,142,144,145,146,149,152,153,154,155,158,159,160,161,166,167,168,169,170,171,172,],[-7,27,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-55,-56,-57,-58,-59,-7,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,27,-23,-24,-25,-22,27,-7,-7,-7,-34,-31,27,-7,27,27,-18,27,-21,-33,-32,-7,-7,27,27,-20,-36,]),'println':([7,9,14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,54,55,56,57,66,70,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,111,119,130,131,135,136,142,144,145,146,149,152,153,154,155,158,159,160,161,166,167,168,169,170,171,172,],[-7,29,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-55,-56,-57,-58,-59,-7,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,29,-23,-24,-25,-22,29,-7,-7,-7,-34,-31,29,-7,29,29,-18,29,-21,-33,-32,-7,-7,29,29,-20,-36,]),'prints':([7,9,14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,54,55,56,57,66,70,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,111,119,130,131,135,136,142,144,145,146,149,152,153,154,155,158,159,160,161,166,167,168,169,170,171,172,],[-7,30,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-55,-56,-57,-58,-59,-7,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,30,-23,-24,-25,-22,30,-7,-7,-7,-34,-31,30,-7,30,30,-18,30,-21,-33,-32,-7,-7,30,30,-20,-36,]),'for':([7,9,14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,54,55,56,57,66,70,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,111,119,130,131,135,136,142,144,145,146,149,152,153,154,155,158,159,160,161,166,167,168,169,170,171,172,],[-7,33,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-55,-56,-57,-58,-59,-7,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,33,-23,-24,-25,-22,33,-7,-7,-7,-34,-31,33,-7,33,33,-18,33,-21,-33,-32,-7,-7,33,33,-20,-36,]),'while':([7,9,14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,54,55,56,57,66,70,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,111,119,130,131,135,136,142,144,145,146,149,152,153,154,155,158,159,160,161,166,167,168,169,170,171,172,],[-7,34,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-55,-56,-57,-58,-59,-7,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,34,-23,-24,-25,-22,34,-7,-7,-7,-34,-31,34,-7,34,34,-18,34,-21,-33,-32,-7,-7,34,34,-20,-36,]),'read':([7,9,14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,54,55,56,57,66,70,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,111,119,130,131,135,136,142,144,145,146,149,152,153,154,155,158,159,160,161,166,167,168,169,170,171,172,],[-7,35,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-55,-56,-57,-58,-59,-7,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,35,-23,-24,-25,-22,35,-7,-7,-7,-34,-31,35,-7,35,35,-18,35,-21,-33,-32,-7,-7,35,35,-20,-36,]),'if':([7,9,14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,54,55,56,57,66,70,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,111,119,130,131,135,136,142,144,145,146,149,152,153,154,155,158,159,160,161,166,167,168,169,170,171,172,],[-7,36,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-55,-56,-57,-58,-59,-7,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,36,-23,-24,-25,-22,36,-7,-7,-7,-34,-31,36,-7,36,36,-18,36,-21,-33,-32,-7,-7,36,36,-20,-36,]),'repeat':([7,9,14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,54,55,56,57,66,70,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,111,119,130,131,135,136,142,144,145,146,149,152,153,154,155,158,159,160,161,166,167,168,169,170,171,172,],[-7,38,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-55,-56,-57,-58,-59,-7,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,38,-23,-24,-25,-22,38,-7,-7,-7,-34,-31,38,-7,38,38,-18,38,-21,-33,-32,-7,-7,38,38,-20,-36,]),'num':([7,9,14,15,16,17,18,19,20,21,22,23,24,25,26,28,32,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,69,70,71,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,101,102,103,104,105,106,111,119,120,121,130,131,133,135,136,138,139,142,144,145,146,147,149,152,153,154,155,158,159,160,161,163,166,167,168,169,170,171,172,],[-7,32,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,32,-60,-54,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-55,-56,-57,-58,32,32,32,32,32,32,-59,32,110,-7,32,32,116,117,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,32,32,-62,32,32,32,32,32,32,32,-23,32,32,-24,-25,32,-22,32,32,32,-7,-7,-7,-34,156,-31,32,-7,32,32,-18,32,-21,-33,32,-32,-7,-7,32,32,-20,-36,]),'(':([7,9,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,66,67,70,71,73,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,99,100,101,102,103,104,105,106,111,119,120,121,130,131,133,135,136,138,139,142,144,145,146,149,152,153,154,155,158,159,160,161,163,166,167,168,169,170,171,172,],[-7,28,-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,61,62,67,68,69,-60,70,71,72,73,-54,-19,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-55,-56,-57,-58,28,28,28,28,62,28,-59,28,-7,62,62,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,62,62,-62,28,28,28,28,28,28,28,-23,62,62,-24,-25,62,-22,28,28,28,-7,-7,-7,-34,-31,28,-7,28,28,-18,28,-21,-33,28,-32,-7,-7,28,28,-20,-36,]),';':([14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,54,55,56,57,66,70,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,107,111,119,122,123,124,125,126,127,128,129,130,131,135,143,146,149,150,151,158,160,161,166,171,172,],[-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-55,-56,-57,-58,-59,-7,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,-74,133,-23,-66,-67,-70,-71,-72,-73,-75,-76,-24,-25,-22,153,-34,-31,-68,-69,-18,-21,-33,-32,-20,-36,]),')':([14,15,16,17,18,19,20,21,22,23,24,25,26,32,37,54,55,56,57,63,64,66,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,107,108,109,110,112,114,115,119,122,123,124,125,126,127,128,129,130,131,135,140,141,146,149,150,151,153,158,159,160,161,166,171,172,],[-6,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-59,-44,-60,-54,-55,-56,-57,-58,97,100,-59,-38,-59,-39,-30,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,119,97,-61,-62,-74,130,131,132,134,135,136,-23,-66,-67,-70,-71,-72,-73,-75,-76,-24,-25,-22,150,151,-34,-31,-68,-69,-7,-18,164,-21,-33,-32,-20,-36,]),'+':([16,25,26,32,37,54,55,56,57,64,66,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,100,107,108,113,124,125,126,127,128,129,148,149,166,],[40,-59,-44,-60,-54,-55,-56,-57,-58,40,-59,-38,-59,-39,40,40,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,40,-61,-62,40,40,40,40,40,40,40,40,40,40,40,40,]),'-':([16,25,26,32,37,54,55,56,57,64,66,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,100,107,108,113,124,125,126,127,128,129,148,149,166,],[41,-59,-44,-60,-54,-55,-56,-57,-58,41,-59,-38,-59,-39,41,41,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,41,-61,-62,41,41,41,41,41,41,41,41,41,41,41,41,]),'=':([25,39,118,157,],[42,75,139,163,]),'[':([25,39,118,137,],[43,74,138,147,]),'addeq':([25,66,],[44,44,]),'subeq':([25,66,],[45,45,]),'addeql':([25,66,],[46,46,]),'subeql':([25,66,],[47,47,]),'muleq':([25,66,77,],[48,48,48,]),'diveq':([25,66,77,],[49,49,49,]),'modeq':([25,66,77,],[50,50,50,]),'muleql':([25,66,77,],[51,51,51,]),'diveql':([25,66,77,],[52,52,52,]),'modeql':([25,66,77,],[53,53,53,]),'plus':([25,66,77,85,],[54,54,54,54,]),'plusl':([25,66,77,85,],[55,55,55,55,]),'minus':([25,66,77,85,],[56,56,56,56,]),'minusl':([25,66,77,85,],[57,57,57,57,]),'*':([25,26,32,37,54,55,56,57,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,],[-59,58,-60,-54,-55,-56,-57,-58,-59,58,-59,58,58,58,58,58,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,]),'/':([25,26,32,37,54,55,56,57,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,],[-59,59,-60,-54,-55,-56,-57,-58,-59,59,-59,59,59,59,59,59,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,]),'%':([25,26,32,37,54,55,56,57,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,],[-59,60,-60,-54,-55,-56,-57,-58,-59,60,-59,60,60,60,60,60,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,]),'sup':([26,32,37,54,55,56,57,64,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,113,],[-44,-60,-54,-55,-56,-57,-58,101,-59,-38,-59,-39,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,101,]),'inf':([26,32,37,54,55,56,57,64,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,113,],[-44,-60,-54,-55,-56,-57,-58,102,-59,-38,-59,-39,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,102,]),'supeq':([26,32,37,54,55,56,57,64,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,113,],[-44,-60,-54,-55,-56,-57,-58,103,-59,-38,-59,-39,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,103,]),'infeq':([26,32,37,54,55,56,57,64,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,113,],[-44,-60,-54,-55,-56,-57,-58,104,-59,-38,-59,-39,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,104,]),'eq':([26,32,37,54,55,56,57,64,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,113,],[-44,-60,-54,-55,-56,-57,-58,105,-59,-38,-59,-39,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,105,]),'diff':([26,32,37,54,55,56,57,64,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,113,],[-44,-60,-54,-55,-56,-57,-58,106,-59,-38,-59,-39,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,106,]),']':([26,32,37,54,55,56,57,66,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,97,100,116,148,156,],[-44,-60,-54,-55,-56,-57,-58,-59,-38,-59,-39,118,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,-61,-62,137,157,162,]),'and':([26,32,37,54,55,56,57,63,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,100,107,112,115,122,123,124,125,126,127,128,129,140,141,143,150,151,],[-44,-60,-54,-55,-56,-57,-58,98,-59,-38,-59,-39,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,120,-61,-62,-74,98,98,98,98,-70,-71,-72,-73,-75,-76,98,98,98,-68,-69,]),'or':([26,32,37,54,55,56,57,63,66,76,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,97,100,107,112,115,122,123,124,125,126,127,128,129,140,141,143,150,151,],[-44,-60,-54,-55,-56,-57,-58,99,-59,-38,-59,-39,-40,-41,-42,-43,-59,-48,-49,-50,-51,-52,-53,-45,-46,-47,121,-61,-62,-74,99,99,99,99,-70,-71,-72,-73,-75,-76,99,99,99,-68,-69,]),'not':([28,62,71,73,98,99,120,121,133,],[65,65,65,65,65,65,65,65,65,]),'string':([68,],[109,]),'else':([161,],[165,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Prog':([0,],[1,]),'VarBlc':([0,],[2,]),'MainBlc':([2,],[4,]),'Dcls':([6,],[8,]),'Insts':([7,70,142,144,145,153,167,168,],[9,111,152,154,155,159,169,170,]),'Dcl':([8,],[11,]),'Inst':([9,111,136,152,154,155,159,169,170,],[14,14,146,14,14,14,14,14,14,]),'Attr':([9,111,136,152,154,155,159,169,170,],[15,15,15,15,15,15,15,15,15,]),'Exp':([9,28,42,43,61,62,65,67,71,73,98,99,101,102,103,104,105,106,111,120,121,133,136,138,139,152,154,155,159,163,169,170,],[16,64,79,80,95,64,107,108,113,113,113,113,124,125,126,127,128,129,16,113,113,113,16,148,149,16,16,16,16,166,16,16,]),'Print':([9,111,136,152,154,155,159,169,170,],[17,17,17,17,17,17,17,17,17,]),'Println':([9,111,136,152,154,155,159,169,170,],[18,18,18,18,18,18,18,18,18,]),'Prints':([9,111,136,152,154,155,159,169,170,],[19,19,19,19,19,19,19,19,19,]),'Repeat':([9,111,136,152,154,155,159,169,170,],[20,20,20,20,20,20,20,20,20,]),'For':([9,111,136,152,154,155,159,169,170,],[21,21,21,21,21,21,21,21,21,]),'While':([9,111,136,152,154,155,159,169,170,],[22,22,22,22,22,22,22,22,22,]),'Read':([9,111,136,152,154,155,159,169,170,],[23,23,23,23,23,23,23,23,23,]),'If':([9,111,136,152,154,155,159,169,170,],[24,24,24,24,24,24,24,24,24,]),'Term':([9,28,40,41,42,43,44,45,46,47,61,62,65,67,71,73,98,99,101,102,103,104,105,106,111,120,121,133,136,138,139,152,154,155,159,163,169,170,],[26,26,76,78,26,26,81,82,83,84,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'RepeatS':([9,111,136,152,154,155,159,169,170,],[31,31,31,31,31,31,31,31,31,]),'Factor':([9,28,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,59,60,61,62,65,67,71,73,98,99,101,102,103,104,105,106,111,120,121,133,136,138,139,152,154,155,159,163,169,170,],[37,37,37,37,37,37,37,37,37,37,86,87,88,89,90,91,92,93,94,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'Cond':([28,62,71,73,98,99,120,121,133,],[63,96,112,115,122,123,140,141,143,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Prog","S'",1,None,None,None),
  ('Prog -> VarBlc MainBlc','Prog',2,'p_Prog','compiler_yacc.py',110),
  ('VarBlc -> vars { Dcls }','VarBlc',4,'p_VarBlc','compiler_yacc.py',114),
  ('Dcls -> Dcls Dcl','Dcls',2,'p_Dcls','compiler_yacc.py',123),
  ('Dcls -> <empty>','Dcls',0,'p_Dcls_End','compiler_yacc.py',128),
  ('MainBlc -> main { Insts }','MainBlc',4,'p_MainBlc','compiler_yacc.py',132),
  ('Insts -> Insts Inst','Insts',2,'p_Insts','compiler_yacc.py',138),
  ('Insts -> <empty>','Insts',0,'p_Insts_End','compiler_yacc.py',142),
  ('Inst -> Attr','Inst',1,'p_Inst_Attr','compiler_yacc.py',146),
  ('Inst -> Exp','Inst',1,'p_Inst_Exp','compiler_yacc.py',151),
  ('Inst -> Print','Inst',1,'p_Inst_Print','compiler_yacc.py',155),
  ('Inst -> Println','Inst',1,'p_Inst_Println','compiler_yacc.py',160),
  ('Inst -> Prints','Inst',1,'p_Inst_Prints','compiler_yacc.py',165),
  ('Inst -> Repeat','Inst',1,'p_Inst_Repeat','compiler_yacc.py',171),
  ('Inst -> For','Inst',1,'p_Inst_For','compiler_yacc.py',176),
  ('Inst -> While','Inst',1,'p_Inst_While','compiler_yacc.py',180),
  ('Inst -> Read','Inst',1,'p_Inst_Read','compiler_yacc.py',184),
  ('Inst -> If','Inst',1,'p_Inst_If','compiler_yacc.py',189),
  ('Repeat -> RepeatS ( num ) { Insts }','Repeat',7,'p_Repeat','compiler_yacc.py',196),
  ('RepeatS -> repeat','RepeatS',1,'p_RepeatS','compiler_yacc.py',237),
  ('For -> for ( Insts ; Cond ; Insts ) { Insts }','For',11,'p_For','compiler_yacc.py',251),
  ('While -> while ( Cond ) { Insts }','While',7,'p_While','compiler_yacc.py',262),
  ('Read -> read ( id )','Read',4,'p_Read','compiler_yacc.py',273),
  ('Print -> print ( Exp )','Print',4,'p_Print','compiler_yacc.py',281),
  ('Println -> println ( Exp )','Println',4,'p_Println','compiler_yacc.py',288),
  ('Prints -> prints ( string )','Prints',4,'p_Prints','compiler_yacc.py',300),
  ('Dcl -> int id [ num ]','Dcl',5,'p_Dcl_Arr','compiler_yacc.py',307),
  ('Dcl -> int id [ num ] [ num ]','Dcl',8,'p_Dcl_Arr_2D','compiler_yacc.py',314),
  ('Dcl -> int id','Dcl',2,'p_Dcl_0','compiler_yacc.py',321),
  ('Dcl -> int id = num','Dcl',4,'p_Dcl_num','compiler_yacc.py',328),
  ('Attr -> id = Exp','Attr',3,'p_Attr','compiler_yacc.py',335),
  ('Attr -> id [ Exp ] = Exp','Attr',6,'p_Attr_arr','compiler_yacc.py',344),
  ('Attr -> id [ Exp ] [ Exp ] = Exp','Attr',9,'p_Attr_arr2D','compiler_yacc.py',361),
  ('If -> if ( Cond ) { Insts }','If',7,'p_If','compiler_yacc.py',385),
  ('If -> if ( Cond ) Inst','If',5,'p_If_0','compiler_yacc.py',400),
  ('IfStart -> if ( Cond )','IfStart',4,'p_IfStart','compiler_yacc.py',415),
  ('If -> if ( Cond ) { Insts } else { Insts }','If',11,'p_If_Else','compiler_yacc.py',425),
  ('ElseStart -> else','ElseStart',1,'p_ElseStart','compiler_yacc.py',448),
  ('Exp -> Exp + Term','Exp',3,'p_Exp_add','compiler_yacc.py',461),
  ('Exp -> Exp - Term','Exp',3,'p_Exp_sub','compiler_yacc.py',465),
  ('Exp -> id addeq Term','Exp',3,'p_Exp_id_addeq','compiler_yacc.py',469),
  ('Exp -> id subeq Term','Exp',3,'p_Exp_id_subeq','compiler_yacc.py',477),
  ('Exp -> id addeql Term','Exp',3,'p_Exp_id_addeql','compiler_yacc.py',485),
  ('Exp -> id subeql Term','Exp',3,'p_Exp_id_subeql','compiler_yacc.py',493),
  ('Exp -> Term','Exp',1,'p_Exp_term','compiler_yacc.py',501),
  ('Term -> Term * Factor','Term',3,'p_Term_mul','compiler_yacc.py',505),
  ('Term -> Term / Factor','Term',3,'p_Term_div','compiler_yacc.py',509),
  ('Term -> Term % Factor','Term',3,'p_Term_mod','compiler_yacc.py',513),
  ('Term -> id muleq Factor','Term',3,'p_Term_id_muleq','compiler_yacc.py',517),
  ('Term -> id diveq Factor','Term',3,'p_Term_id_diveq','compiler_yacc.py',525),
  ('Term -> id modeq Factor','Term',3,'p_Term_id_modeq','compiler_yacc.py',533),
  ('Term -> id muleql Factor','Term',3,'p_Term_id_muleql','compiler_yacc.py',542),
  ('Term -> id diveql Factor','Term',3,'p_Term_id_diveql','compiler_yacc.py',550),
  ('Term -> id modeql Factor','Term',3,'p_Term_id_modeql','compiler_yacc.py',558),
  ('Term -> Factor','Term',1,'p_Term_factor','compiler_yacc.py',566),
  ('Factor -> id plus','Factor',2,'p_Factor_id_plus','compiler_yacc.py',570),
  ('Factor -> id plusl','Factor',2,'p_Factor_id_plusl','compiler_yacc.py',578),
  ('Factor -> id minus','Factor',2,'p_Factor_id_minus','compiler_yacc.py',586),
  ('Factor -> id minusl','Factor',2,'p_Factor_id_minusl','compiler_yacc.py',594),
  ('Factor -> id','Factor',1,'p_Factor_id','compiler_yacc.py',602),
  ('Factor -> num','Factor',1,'p_Factor_num','compiler_yacc.py',606),
  ('Factor -> ( Cond )','Factor',3,'p_Factor_cond','compiler_yacc.py',611),
  ('Factor -> ( Exp )','Factor',3,'p_Factor_group','compiler_yacc.py',633),
  ('Id -> id','Id',1,'p_Id','compiler_yacc.py',638),
  ('Id -> id [ Exp ]','Id',4,'p_Id_arr','compiler_yacc.py',642),
  ('Id -> id [ Exp ] [ Exp ]','Id',7,'p_Id_arr_2d','compiler_yacc.py',649),
  ('Cond -> Cond and Cond','Cond',3,'p_Cond_and','compiler_yacc.py',658),
  ('Cond -> Cond or Cond','Cond',3,'p_Cond_or','compiler_yacc.py',662),
  ('Cond -> ( Cond and Cond )','Cond',5,'p_Cond_and_par','compiler_yacc.py',667),
  ('Cond -> ( Cond or Cond )','Cond',5,'p_Cond_or_par','compiler_yacc.py',671),
  ('Cond -> Exp sup Exp','Cond',3,'p_Cond_sup','compiler_yacc.py',676),
  ('Cond -> Exp inf Exp','Cond',3,'p_Cond_inf','compiler_yacc.py',680),
  ('Cond -> Exp supeq Exp','Cond',3,'p_Cond_supeq','compiler_yacc.py',684),
  ('Cond -> Exp infeq Exp','Cond',3,'p_Cond_infeq','compiler_yacc.py',688),
  ('Cond -> not Exp','Cond',2,'p_Cond_not','compiler_yacc.py',692),
  ('Cond -> Exp eq Exp','Cond',3,'p_Cond_eq','compiler_yacc.py',696),
  ('Cond -> Exp diff Exp','Cond',3,'p_Cond_diff','compiler_yacc.py',700),
]
